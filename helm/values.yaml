---
# Voxel51 provided you with a voxel51-docker.json file, you can use the following command to create a Pull Secret:
#  kubectl --namespace your-namespace-here create secret generic regcred \
#    --from-file=.dockerconfigjson=./voxel51-docker.json --type kubernetes.io/dockerconfigjson
# If you use the Voxel51 command above your imagePullSecrets would look like:
# imagePullSecrets:
#  - name: regcred

secret:
  fiftyone:
    # These secrets come from Voxel51 and should be omitted when
    # `casSettings.env.FIFTYONE_AUTH_MODE` is set to `internal`
    apiClientId:
    apiClientSecret:
    auth0Domain:
    clientId:
    clientSecret:
    organizationId:
    # These secrets come from your MongoDB implementation
    fiftyoneDatabaseName: fiftyone
    mongodbConnectionString: mongodb://username:password@somehostname/?authSource=admin
    # This secret is a required random string used to encrypt session cookies
    # Use something like `openssl rand -hex 32` to generate this string
    cookieSecret:
    # This key is required and is used to encrypt storage credentials in the MongoDB
    #   do NOT lose this key!
    # generate keys by executing the following in python:
    #
    # from cryptography.fernet import Fernet
    # print(Fernet.generate_key().decode())
    encryptionKey:
    # This secret is a random string used to authenticate to the CAS service.
    # This can be any string you care to use generated by any mechanism you
    #   prefer.
    # Using OS X you could use something like:
    #  `cat /dev/urandom | LC_CTYPE=C tr -cd '[:graph:]' | head -c 32`
    #  to generate this string.
    # This is used for inter-service authentication and for the SuperUser to
    # authenticate at the CAS UI to configure the Central Authentication Service.
    fiftyoneAuthSecret:

# apiSettings:
#   Set `dnsName` to expose the API with host-based routing.
#   See https://helm.fiftyone.ai/docs/expose-teams-api.html for more information.
#   dnsName: your-api.hostname.here
#   env:
#     Set FIFTYONE_PLUGINS_DIR if you are enabling plugins in a dedicated
#       `teams-plugins` deployment
#     See https://github.com/voxel51/fiftyone-teams-app-deploy/tree/main/helm/fiftyone-teams-app#fiftyone-teams-plugins
#     FIFTYONE_PLUGINS_DIR: /opt/plugins
#     Set FIFTYONE_TEAMS_VERSION_OVERRIDE to override the `Install FiftyOne`
#       bash command in the `Settings > Install FiftyOne` modal
#     FIFTYONE_TEAMS_VERSION_OVERRIDE: pip install --index-url https://privatepypi.internal.org fiftyone==0.16.0


appSettings:
  env:
#    FIFTYONE_DATABASE_ADMIN is set to `false` by default for v1.6.0
#     If you are performing a new install or an upgrade from v1.0 or earlier you may want to set
#     this value to `true`.
#     Please see https://helm.fiftyone.ai/#initial-installation-vs-upgrades for details
    FIFTYONE_DATABASE_ADMIN: true
#    Set FIFTYONE_PLUGINS_DIR and FIFTYONE_PLUGINS_CACHE_ENABLED if you are
#     enabling plugins in the `fiftyone-app` deployment
#    See https://github.com/voxel51/fiftyone-teams-app-deploy/tree/main/helm/fiftyone-teams-app#fiftyone-teams-plugins
#    FIFTYONE_PLUGINS_DIR: /opt/plugins
#    FIFTYONE_PLUGINS_CACHE_ENABLED: true

casSettings:
  env:
    FIFTYONE_AUTH_MODE: legacy

# pluginsSettings:
#   enabled: true
#   env:
#     Set FIFTYONE_PLUGINS_DIR and FIFTYONE_PLUGINS_CACHE_ENABLED if you are
#      enabling plugins in a dedicated `teams-plugins` deployment
#     See https://github.com/voxel51/fiftyone-teams-app-deploy/tree/main/helm/fiftyone-teams-app#fiftyone-teams-plugins
#     FIFTYONE_PLUGINS_DIR: /opt/plugins
#     FIFTYONE_PLUGINS_CACHE_ENABLED: true

teamsAppSettings:
  dnsName: your.hostname.here

# ingress:
#   annotations:
