<!-- markdownlint-disable no-inline-html line-length -->
<!-- markdownlint-disable-next-line first-line-heading -->
<div align="center">
<p align="center">

<img alt="Voxel51 Logo" src="https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png" height="55px"> &nbsp;
<img alt="Voxel51 FiftyOne" src="https://user-images.githubusercontent.com/25985824/106288518-24bb7680-6216-11eb-8f10-60052c519586.png" height="50px">

</p>
</div>
<!-- markdownlint-enable no-inline-html line-length -->

---

{{ template "chart.header" . }}

{{ template "chart.deprecationWarning" . }}

<!-- markdownlint-disable line-length -->
{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}
<!-- markdownlint-enable line-length -->

This page assumes general knowledge of FiftyOne Enterprise and how to use it.
Please contact Voxel51 for more information regarding FiftyOne Enterprise.

## Important

### Version 2.11+ On-Demand Delegated Operator Executors

FiftyOne Enterprise v2.11 introduces support for on-demand delegated operator
executors for Databricks and Anyscale. Please refer to the
[configuration documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/docs/configuring-on-demand-orchestrator.md).

### Version 2.9+ Startup Probe Changes

FiftyOne Enterprise v2.9 introduces some changes to startup probe configuration.
Please refer to the
[upgrade documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md#fiftyone-enterprise-v29-startup-probe-changes)
for steps on how to upgrade your startup probe configurations.

### Version 2.9+ Delegated Operator Changes

<!-- Differs from docker-compose docs -->

FiftyOne Enterprise v2.9 introduces some changes to delegated operators.
Please refer to the
[upgrade documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md#fiftyone-enterprise-v29-delegated-operator-changes)
for steps on how to upgrade your delegated operators.

### Version 2.9+ Installation Changes

FiftyOne Enterprise v2.9 no longer requires that operators set the
following `FIFTYONE_DATABASE_ADMIN` variable while doing an initial installation:

```yaml
# Required prior to 2.8.0
appSettings:
  env:
    FIFTYONE_DATABASE_ADMIN: true
```

### Version 2.7+ Delegated Operator Changes

FiftyOne Enterprise v2.7 introduces some changes to delegated operators.
Please refer to the
[upgrade documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md#fiftyone-enterprise-v27-delegated-operator-changes)
for steps on how to upgrade your delegated operators.

### Version 2.5+ Delegated Operator Changes

FiftyOne Enterprise v2.5 introduces some changes to delegated operators.
Please refer to the
[upgrade documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md#fiftyone-enterprise-v25-delegated-operator-changes)
for steps on how to upgrade your delegated operators.

### Version 2.2+ Delegated Operator Changes

FiftyOne Enterprise v2.2 introduces some changes to delegated operators.
Please refer to the
[upgrade documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md#fiftyone-enterprise-v22-delegated-operator-changes)
for steps on how to upgrade your delegated operators.

### Version 2.0+ License File Requirement

FiftyOne Enterprise v2.0 introduces a new requirement for a license file.
This license file should be obtained from your Customer Success Team
before upgrading to FiftyOne Enterprise 2.0 or beyond.

Please refer to the
[upgrade documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md#from-fiftyone-enterprise-versions-160-to-171)
for steps on how to add your license file.

## Table of Contents

<!-- toc -->

- [Prerequisites Skills and Knowledge](#prerequisites-skills-and-knowledge)
- [Technical Requirements](#technical-requirements)
  - [Kubernetes Cluster And Kubectl](#kubernetes-cluster-and-kubectl)
  - [Helm](#helm)
- [Estimated Completion Time](#estimated-completion-time)
- [Sizing](#sizing)
- [Usage](#usage)
- [Upgrades](#upgrades)
- [Advanced Configuration](#advanced-configuration)
  - [Backup And Recovery](#backup-and-recovery)
  - [Builtin Delegated Operator Orchestrator](#builtin-delegated-operator-orchestrator)
  - [Central Authentication Service](#central-authentication-service)
  - [FiftyOne Enterprise Authenticated API](#fiftyone-enterprise-authenticated-api)
  - [GPU Enabled Workloads](#gpu-enabled-workloads)
  - [Highly Available FiftyOne `teams-api` Deployments](#highly-available-fiftyone-teams-api-deployments)
  - [Plugins](#plugins)
  - [Proxies](#proxies)
  - [Secrets And Sensitive Data](#secrets-and-sensitive-data)
  - [Snapshot Archival](#snapshot-archival)
  - [Storage Credentials and `FIFTYONE_ENCRYPTION_KEY`](#storage-credentials-and-fiftyone_encryption_key)
  - [Static Banner Configuration](#static-banner-configuration)
  - [Terms of Service, Privacy, and Imprint URLs](#terms-of-service-privacy-and-imprint-urls)
  - [Text Similarity](#text-similarity)
  - [Workload Identity Federation](#workload-identity-federation)
- [Validating](#validating)
- [Health Checks And Monitoring](#health-checks-and-monitoring)
  - [Basic Health Assessment](#basic-health-assessment)
  - [Troubleshooting Unhealthy Pods](#troubleshooting-unhealthy-pods)
- [Values](#values)

<!-- tocstop -->

## Prerequisites Skills and Knowledge

The following prerequisites skills & knowledge
are required for a successful and properly secured
deployment of FiftyOne Enterprise.

1. A knowledge of kubernetes.

1. A knowledge of installing helm charts to deploy kubernetes applications.

1. A knowledge MongoDB.

1. A knowledge of DNS and the ability to generate, modify, and delete DNS records.

1. A knowledge of TLS/SSL and the ability to generate TLS/SSL certificates.

1. (optional) A knowledge of network file systems (NFS).

## Technical Requirements

The following technical requirements
are required for a successful and properly secured
deployment of FiftyOne Enterprise.

1. [Kubernetes Cluster And Kubectl](#kubernetes-cluster-and-kubectl)

1. [Helm](#helm)

1. A MongoDB Database that meets FiftyOne's
   [version constraints](https://docs.voxel51.com/user_guide/config.html#using-a-different-mongodb-version).

1. A DNS record or records for ingress.

1. A TLS/SSL certificate or certificates for HTTPS ingress.

1. (optional) An NFS server or `ReadWriteMany` compatible storage medium for
   [delegated operators](#builtin-delegated-operator-orchestrator),
   [plugins](#plugins),
   and
   [API high-availability](#highly-available-fiftyone-teams-api-deployments)

### Kubernetes Cluster And Kubectl

A kubernetes cluster and `kubectl` installation are required.
The following kubernetes/kubectl versions are required:

{{ template "chart.kubeVersionLine" . }}

However, it is recommended to use a
[supported kubernetes version](https://kubernetes.io/releases/).
Please refer to the
[kubernetes installation documentation](https://kubernetes.io/docs/tasks/tools/)
for steps on installing kubernetes and kubectl.

### Helm

Helm version >= 3.14 is required.

Please refer to the
[helm installation documentation](https://helm.sh/docs/intro/install/)
for steps on installing helm.

## Estimated Completion Time

The estimated time to deploy FiftyOne Enterprise is approximately 2 hours.

## Sizing

Voxel51 recommends the following resource sizing:

- MongoDB: 4 CPU, 16GB RAM, 256GB Storage
- FiftyOne App: 1 CPU, 2GB RAM, 1GB Storage per pod
- Teams API: 1 CPU, 2GB RAM, 1GB Storage per pod
- Teams App: 500 mCPU, 512MB RAM, 512MB Storage per pod
- Teams CAS: 500 mCPU, 512MB RAM, 512MB Storage per pod
- (optional) Delegated Operators: 1 CPU, 2GB RAM, 1GB Storage per pod
- (optional) Dedicated Plugins: 1 CPU, 2GB RAM, 1GB Storage per pod

Voxel51 also recommends monitoring resource consumption across
the applications.
Resource usage may vary dramatically with operations, use cases,
and dataset sizes.

## Usage

FiftyOne Enterprise v2.0 introduces a new requirement for a license file.  This
license file should be obtained from your Customer Success Team before
upgrading to FiftyOne Enterprise 2.0 or beyond.

The license file now contains all of the Auth0 configuration that was
previously provided through kubernetes secrets; you may remove those secrets
from your `values.yaml` and from any secrets created outside of the Voxel51
install process.

Use the license file provided by the Voxel51 Customer Success Team to create
a new license file secret:

```shell
kubectl create namespace your-namespace-here
kubectl --namespace your-namespace-here create secret generic fiftyone-license \
--from-file=license=./your-license-file
```

> **NOTE**: To ensure that the new license values take effect
> immediately, you must to restart the `teams-cas` and `teams-api` services.
> You may delete the pods, or run
>
> ```shell
> kubectl rollout restart deploy \
>   -n your-namespace \
>   teams-cas \
>   teams-api
> ```

We publish the following FiftyOne Enterprise private images to Docker Hub:

- `voxel51/fiftyone-app`
- `voxel51/fiftyone-app-gpt`
- `voxel51/fiftyone-app-torch`
- `voxel51/fiftyone-teams-api`
- `voxel51/fiftyone-teams-app`
- `voxel51/fiftyone-teams-cas`
- `voxel51/fiftyone-teams-cv-full`

For Docker Hub credentials, please contact your Voxel51 support team.

If you are using the Voxel51 DockerHub registry to install your
container images, use these Voxel51-provided DockerHub credentials to
create an Image Pull Secret, and uncomment the `imagePullSecrets`
section of your `values.yaml`

```shell
kubectl --namespace your-namespace-here create secret generic \
  regcred --from-file=.dockerconfigjson=./voxel51-docker.json \
  --type kubernetes.io/dockerconfigjson
```

To use the Helm chart, add the FiftyOne helm repository and
check that you have access to the chart:

```shell
helm repo add voxel51 https://helm.fiftyone.ai
helm repo update voxel51
```

Finally, edit your `values.yaml` file and install FiftyOne Enterprise:

```shell
helm install fiftyone-teams-app voxel51/fiftyone-teams-app \
  --namespace your-namespace-here \
  -f ./values.yaml
```

A minimal example `values.yaml` may be found
[in the repository](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/values.yaml).

## Upgrades

When performing an upgrade, please review
[Upgrading From Previous Versions](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/upgrading.md).

## Advanced Configuration

### Backup And Recovery

FiftyOne Enterprise data is stored in a MongoDB instance.
It is recommended to periodically backup the MongoDB instance
according to
[MongoDB best practices](https://www.mongodb.com/docs/manual/tutorial/backup-and-restore-tools/).

If needed, it is recommended to restore the most-recent backup
according to
[MongoDB best practices](https://www.mongodb.com/docs/manual/tutorial/backup-and-restore-tools/).

### Builtin Delegated Operator Orchestrator

FiftyOne Enterprise v2.2 introduces a builtin orchestrator to run
[Delegated Operations](https://docs.voxel51.com/enterprise/enterprise_plugins.html#delegated-operations),
instead of (or in addition to) configuring your own orchestrator such as Airflow.

For configuring your delegated operators, see
[Configuring Delegated Operators](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configuring-delegated-operators.md).

### Central Authentication Service

FiftyOne Enterprise v1.6 introduces the Central Authentication Service (CAS).
CAS requires additional configurations and consumes additional resources.
Please review these notes, and the
[Pluggable Authentication](https://docs.voxel51.com/enterprise/pluggable_auth.html)
documentation before completing your upgrade.

Voxel51 recommends upgrading your deployment using
[`legacy` authentication mode][legacy-auth-mode]
and migrating to
[`internal` authentication mode][internal-auth-mode]
after confirming your initial upgrade was successful.

Please contact your Voxel51 customer success representative for assistance
in migrating to internal mode.

The CAS service requires changes to your `values.yaml` files.
A brief summary of those changes include

- Add the `fiftyoneAuthSecret` secret to either
  - `secret.fiftyone`
  - secret specified in `secret.name`

When using path-based routing, update your `values.yaml`
to include the rule (add it before the `path: /` rule)

```yaml
- path: /cas
  pathType: Prefix
  serviceName: teams-cas
  servicePort: 80
```

### FiftyOne Enterprise Authenticated API

FiftyOne Enterprise v1.3 introduced the capability to connect FiftyOne
Enterprise SDKs through the FiftyOne Enterprise API (instead of direct
MongoDB connection).

To enable the FiftyOne Enterprise Authenticated API,
[expose the FiftyOne Enterprise API endpoint](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/expose-teams-api.md)
and
[configure your SDK](https://docs.voxel51.com/enterprise/api_connection.html).

### GPU Enabled Workloads

FiftyOne services can be scheduled on GPU-enabled hardware for more efficient
computation.

To schedule pods on GPU-enabled hardware, see the
[configuring GPU workloads documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configuring-gpu-workloads.md).

### Highly Available FiftyOne `teams-api` Deployments

FiftyOne Enterprise v2.7 introduced support for running multiple `teams-api`
pods for high availability [HA].

Running multiple `teams-api` pods requires a read-write volume available to all
of the pods in the `teams-api` deployment to synchronize the API cache.

For configuring HA FiftyOne `teams-api` deployments see
[Configuring Highly Available FiftyOne `teams-api` Deployments](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configure-ha-teams-api.md)

### Plugins

FiftyOne Enterprise v1.3 introduced significant enhancements for
[Plugins](https://docs.voxel51.com/plugins/index.html)
to customize and enhance functionality.

There are three modes for plugins

1. Builtin Plugins Only
    - This is the default mode
    - Users may only run the builtin plugins shipped with FiftyOne Enterprise
    - Cannot run custom plugins
1. Shared Plugins
    - Users may run builtin and custom plugins
    - Plugins run in the existing `fiftyone-app` deployment
      - Plugins resource consumption may starve `fiftyone-app`,
        causing the app to be slow or crash
1. Dedicated Plugins
    - Users may run builtin and custom plugins
    - Plugins run in a dedicated `teams-plugins` deployment
      - Plugins resource consumption does not affect `fiftyone-app`

To use plugins with custom dependencies, build and use
[Custom Plugins Images](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/docs/custom-plugins.md).

To use the FiftyOne Enterprise UI to deploy plugins,
navigate to `https://<DEPLOY_URL>/settings/plugins`.
Early-adopter plugins installed manually must
be redeployed using the FiftyOne Enterprise UI.

For configuring your plugins, see
[Configuring Plugins](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configuring-plugins.md).

### Proxies

FiftyOne Enterprise supports routing traffic through proxy servers.
Please refer to the
[proxy configuration documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configuring-proxies.md)
for information on how to configure proxies.

### Secrets And Sensitive Data

By default, database credentials, cookie secrets,
encryption keys, and authentication secrets are stored in a kubernetes secret.
This is configured by the following settings in `values.yaml`:

```yaml
secret:
  # -- Controls whether to create the secret named `secret.name`.
  create: true
  # -- Name of the secret (existing or to be created) in the namespace `namespace.name`.
  name: fiftyone-teams-secrets
  fiftyone:
    # -- MongoDB Database Name for FiftyOne Enterprise.
    fiftyoneDatabaseName: ""
    # -- MongoDB Connection String. [Reference][mongodb-connection-string].
    mongodbConnectionString: ""

    # -- A randomly generated string for cookie encryption.
    # To generate, run `openssl rand -hex 32`.
    cookieSecret: ""
    # -- Encryption key for storage credentials. [Reference][fiftyone-encryption-key].
    encryptionKey: ""
    # -- A randomly generated string for CAS Authentication.
    # This can be any string you care to use generated by any mechanism you
    #   prefer.
    # This is used for inter-service authentication and for the SuperUser to
    #  authenticate at the CAS UI to configure the Central Authentication Service.
    fiftyoneAuthSecret: ""
  # -- Additional labels for the generated secret. [Reference][labels-and-selectors].
  labels: {}
```

These secrets can be created, managed, and updated by an external secret manager
such as
[external-secrets][external-secrets-io].

FiftyOne Enterprise supports
[configuring secrets](https://docs.voxel51.com/enterprise/secrets.html#adding-secrets)
for the deployment to use.

Please see
[Storage Credentials and `FIFTYONE_ENCRYPTION_KEY`](#storage-credentials-and-fiftyone_encryption_key)
and
[adding secrets](https://docs.voxel51.com/enterprise/secrets.html#adding-secrets)
for questions regarding storage and encryption.

### Snapshot Archival

Since version v1.5, FiftyOne Enterprise supports
[archiving snapshots](https://docs.voxel51.com/enterprise/dataset_versioning.html#snapshot-archival)
to cold storage locations to prevent filling up the MongoDB database.
Supported locations are network mounted filesystems and cloud storage folders.

Please refer to the
[snapshot archival configuration documentation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configuring-snapshot-archival.md)
for configuring snapshot archival.

### Storage Credentials and `FIFTYONE_ENCRYPTION_KEY`

Pods based on the `fiftyone-teams-api` and `fiftyone-app`
images must include the `FIFTYONE_ENCRYPTION_KEY` variable.
This key is used to encrypt storage credentials in the MongoDB database.

To generate a value for `secret.fiftyone.encryptionKey`, run this
Python code and add the output to your `values.yaml` override file,
or to your deployment's secret

```python
from cryptography.fernet import Fernet
print(Fernet.generate_key().decode())
```

Voxel51 does not have access to this encryption key and cannot reproduce it.
Please store this key in a safe place.
If the key is lost, you will need to

1. Schedule an outage window
    1. Drop the storage credentials collection
    1. Replace the encryption key
    1. Add the storage credentials via the UI again.

Users with `Admin` permissions may use the FiftyOne Enterprise UI to manage storage
credentials by navigating to `https://<DEPOY_URL>/settings/cloud_storage_credentials`.

If added via the UI, storage credentials no longer need to be
mounted into pods or provided via environment variables.

FiftyOne Enterprise continues to support the use of environment variables to set
storage credentials in the application context and is providing an alternate
configuration path.

### Static Banner Configuration

FiftyOne Enterprise v2.6 introduces the ability to add a static banner to the
application.

Banner text is configured with
`casSettings.env.FIFTYONE_APP_BANNER_TEXT` and
`teamsAppSettings.env.FIFTYONE_APP_BANNER_TEXT`.
Banner background color is configured with
`casSettings.env.FIFTYONE_APP_BANNER_COLOR` and
`teamsAppSettings.env.FIFTYONE_APP_BANNER_COLOR`.
Banner text color is configured with
`casSettings.env.FIFTYONE_APP_BANNER_TEXT_COLOR` and
`teamsAppSettings.env.FIFTYONE_APP_BANNER_TEXT_COLOR`.

Configure the Static Banner by setting the following environment variables in
your `values.yaml` like

```yaml
casSettings:
  env:
    FIFTYONE_APP_BANNER_COLOR: "green" # or "rgb(34,139,34)" or "#f1f1f1"
    FIFTYONE_APP_BANNER_TEXT_COLOR: "green" # or "rgb(34,139,34)" or "#f1f1f1"
    FIFTYONE_APP_BANNER_TEXT: "Internal Deployment"
teamsAppSettings:
  env:
    FIFTYONE_APP_BANNER_COLOR: "green" # or "rgb(34,139,34)" or "#f1f1f1"
    FIFTYONE_APP_BANNER_TEXT_COLOR: "green" # or "rgb(34,139,34)" or "#f1f1f1"
    FIFTYONE_APP_BANNER_TEXT: "Internal Deployment"
```

### Terms of Service, Privacy, and Imprint URLs

FiftyOne Enterprise v2.6 introduces the ability to override the Terms of
Service, Privacy, and Imprint (optional) links if required in the App.

Configure the URLs by setting the following environment variables in
your `values.yaml`.

Terms of Service URL is configured with
`teamsAppSettings.env.FIFTYONE_APP_TERMS_URL`.

Privacy URL is configured with
`teamsAppSettings.env.FIFTYONE_APP_PRIVACY_URL`.

Imprint/Impressum URL is configured with
`teamsAppSettings.env.FIFTYONE_APP_IMPRINT_URL`

```yaml
teamsAppSettings:
  env:
    FIFTYONE_APP_TERMS_URL: "https://abc.com/tos"
    FIFTYONE_APP_PRIVACY_URL: "https://abc.com/privacy"
    FIFTYONE_APP_IMPRINT_URL: "https://abc.com/imprint"
```

### Text Similarity

Since version v1.2, FiftyOne Enterprise supports using text similarity
searches for images that are indexed with a model that
[supports text queries](https://docs.voxel51.com/user_guide/brain.html#brain-similarity-text).
Use the Voxel51 provided image `fiftyone-app-torch` or
build your own base image including `torch` (PyTorch).

To override the default image, add
`appSettings.image.repository` to your `values.yaml`.
For example,

```yaml
appSettings:
  image:
    repository: voxel51/fiftyone-app-torch
```

### Workload Identity Federation

Voxel51 FiftyOne Enterprise supports Workload Identity Federation
when installing via Helm into various cloud providers.
Workload Identity is achieved using service account annotations
that can be defined in the `values.yaml` file when installing
or upgrading the application.

See
[configuring workload identity federation](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/docs/configure-workload-identity-federation.md)
for more information.

## Validating

After deploying FiftyOne Enterprise and configuring authentication, please
follow
[validating your deployment](https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/docs/validating-deployment.md).

## Health Checks And Monitoring

[Liveness and readiness probes][probes]
are used to monitor each service deployed with FiftyOne Enterprise.

### Basic Health Assessment

Pods will report ready (`1/1`, `2/2`, etc.) in the output of `kubectl get pods`:

```shell
kubectl get pods
```

Expected output for a healthy deployment:

```shell
fiftyone-app-fbcf6666d-crt6z      1/1     Running                  0          5h3m
fiftyone-app-fbcf6666d-wt9w6      1/1     Running                  0          102m
teams-api-64fbf96c96-2tgm9        1/1     Running                  0          5h3m
teams-api-64fbf96c96-b7jz5        1/1     Running                  0          5h3m
teams-api-64fbf96c96-m2dnk        1/1     Running                  0          5h3m
teams-app-fbdd4849f-bwmvt         1/1     Running                  0          116m
teams-app-fbdd4849f-skgb7         1/1     Running                  0          5h3m
teams-cas-68f95d68f-9dglm         1/1     Running                  0          5h3m
teams-cas-68f95d68f-fmq5g         1/1     Running                  0          41m
```

Note that number of pods and pod names may vary per deployment.

### Troubleshooting Unhealthy Pods

If pods show unhealthy states (e.g., `0/1`, `CrashLoopBackOff`, `Pending`):

1. **Get detailed pod information**:

   ```shell
   kubectl describe pod <pod-name>
   ```

2. **Check application logs**:

   ```shell
   kubectl logs <pod-name>
   # For previous container instance logs
   kubectl logs <pod-name> --previous
   ```

3. **Check events for issues**:

   ```shell
   kubectl get events --sort-by='.lastTimestamp'
   ```

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

## Values

{{ template "chart.valuesTable" . }}

<!-- Reference Links -->
[affinity]: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
[annotations]: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
[autoscaling]: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
[configure-ha-teams-api]: #highly-available-fiftyone-teams-api-deployments
[container-security-context]: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
[deployment]: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
[external-secrets-io]: https://external-secrets.io/latest/
[fiftyone-config]: https://docs.voxel51.com/user_guide/config.html
[fiftyone-encryption-key]: https://github.com/voxel51/fiftyone-teams-app-deploy/blob/main/helm/fiftyone-teams-app/#storage-credentials-and-fiftyone_encryption_key
[image-pull-policy]: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
[image-pull-secrets]: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
[ingress-default-ingress-class]: https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class
[ingress-rules]: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
[ingress]: https://kubernetes.io/docs/concepts/services-networking/ingress/
[init-containers]: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
[internal-auth-mode]: https://docs.voxel51.com/enterprise/pluggable_auth.html#internal-mode
[labels-and-selectors]: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
[legacy-auth-mode]: https://docs.voxel51.com/enterprise/pluggable_auth.html#legacy-mode
[mongodb-connection-string]: https://www.mongodb.com/docs/manual/reference/connection-string/
[node-selector]: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
[pod-disruption-budget]: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
[ports]: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
[probes]: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
[recoil-env]: https://recoiljs.org/docs/api-reference/core/RecoilEnv/
[resources]: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
[security-context]: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
[service-account]: https://kubernetes.io/docs/concepts/security/service-accounts/
[service-type]: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
[taints-and-tolerations]: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
[topology-spread-constraints]: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
[upgrade-strategies]: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
[volumes]: https://kubernetes.io/docs/concepts/storage/volumes/
