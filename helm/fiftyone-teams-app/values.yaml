---
# FiftyOne Enterprise API (`teams-api`)
apiSettings:
  # -- Controls whether `teams-api` is added to the chart's ingress.
  # When an empty string, a rule for `teams-api` is not added to the chart managed ingress.
  # When not an empty string, becomes the value to the `host` in the ingress' rule and
  # set `ingress.api` too.
  dnsName: ""
  # -- Annotations for the `teams-api` deployment. [Reference][annotations].
  deploymentAnnotations: {}
  # Environment Variables are passed to the `teams-api` containers
  env:
    # -- Controls FiftyOne GraphQL verbosity.
    # When "production", debug mode is disabled and the default logging level is "INFO".
    # When "development", debug mode is enabled and the default logging level is "DEBUG".
    # Can be overridden by setting `apiSettings.env.LOGGING_LEVEL`.
    FIFTYONE_ENV: production
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Enterprise, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true
    # -- Default number of returned items when listing in GraphQL queries.
    # Can be overridden in the request.
    GRAPHQL_DEFAULT_LIMIT: 10
    # -- Logging level. Overrides the value of `FIFTYONE_ENV`.
    # Can be one of "DEBUG", "INFO", "WARN", "ERROR", or "CRITICAL".
    LOGGING_LEVEL: INFO

  # -- Secret variables to be passed to the `teams-api` containers.
  secretEnv: {}
  #   ENV_VAR_NAME:
  #     secretName: the-pre-existing-secret
  #     secretKey: the-key-in-the-secret

  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for the `teams-api`.
    repository: voxel51/fiftyone-teams-api
    # -- Image tag for `teams-api`. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-api` related objects. [Reference][labels-and-selectors].
  labels: {}

  # -- Number of pods in the `teams-api` deployment's ReplicaSet.
  # When > 1, you must also configure volumes, volumeMounts and set
  # `apiSettings.env.FIFTYONE_SHARED_ROOT_DIR`.
  # For more information see [the documentation][configure-ha-teams-api].
  replicaCount: 1
  # Instead of setting default resources, we require the user define them
  # This enables running on resource constrained environments
  # (like Minikube). To set resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces (`{}`) after 'resources:'.
  # -- Container resource requests and limits for `teams-api`. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 512Mi
  service:
    # -- Service annotations for `teams-api`. [Reference][annotations].
    annotations: {}
    # -- Service container port for `teams-api`.
    containerPort: 8000
    # -- Service name.
    name: teams-api
    # -- (int) Service nodePort set only when `apiSettings.service.type: NodePort` for `teams-api`.
    nodePort:
    # -- Service port for `teams-api`.
    port: 80
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # TODO: Alex - Default should include protocol in the name per kubernetes standards.
    # -- Port name (maximum length is 15 characters) for `teams-api`. [Reference][ports].
    shortname: teams-api
    # -- Service type for `teams-api`. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for `teams-api`. [Reference][affinity].
  affinity: {}
  initContainers:
    # -- Container security configuration for `teams-api` `initContainers`. [Reference][container-security-context].
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      runAsNonRoot: true
      runAsUser: 1000
    # -- Whether to enable init containers for `teams-api`. [Reference][init-containers].
    enabled: true
    image:
      # -- Init container images repositories for `teams-api`. [Reference][init-containers].
      repository: docker.io/busybox
      # -- Init container images tags for `teams-api`. [Reference][init-containers].
      tag: stable-glibc
    # -- Container resource requests and limits for the `teams-api` `initContainers`. [Reference][resources].
    resources:
      limits:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
      requests:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
  liveness:
    # -- Number of times to retry the liveness probe for the `teams-api`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the liveness probe for `teams-api`. [Reference][probes].
    periodSeconds: 15
    # -- Number of seconds after which the liveness probe times out for the `teams-api`. [Reference][probes].
    timeoutSeconds: 5
  # -- nodeSelector for `teams-api`. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for pods for `teams-api`. [Reference][annotations].
  podAnnotations: {}
  # -- Pod Disruption Budget for pods for `teams-api`. [Reference][pod-disruption-budget].
  podDisruptionBudget:
    # -- Whether a pod disruption budget is enabled for `teams-api`.
    enabled: false
    # -- Sets the minimum available or maximum unavailable replicas for the deployment object.
    # Either integers or percentages supported.
    # `maxUnavailable` is also supported, however, only one setting can be used at a time.
    # If both are set, `minAvailable` will be preferred.
    minAvailable: ""
    # maxUnavailable: ""
  # -- Pod-level security attributes and common container settings for `teams-api`. [Reference][security-context].
  podSecurityContext: {}
  readiness:
    # -- Number of times to retry the readiness probe for the `teams-api`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the readiness probe for `teams-api`. [Reference][probes].
    periodSeconds: 15
    # -- Number of seconds after which the readiness probe times out for the `teams-api`. [Reference][probes].
    timeoutSeconds: 5
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for `teams-api`. [Reference][container-security-context].
  securityContext: {}
  startup:
    # -- Number of times to retry the startup probe for the `teams-api`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the startup probe for `teams-api`. [Reference][probes].
    periodSeconds: 30
    # -- Number of seconds after which the startup probe times out for the `teams-api`. [Reference][probes].
    timeoutSeconds: 5
  # -- Allow the k8s scheduler to schedule pods with matching taints for `teams-api`. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Control how pods are spread across your distributed footprint.
  # Label selectors will be defaulted to those of the `teams-api` deployment. [Reference][topology-spread-constraints].
  topologySpreadConstraints: []
  # -- Control how `teams-api` pods are redeployed during an upgrade. [Reference][upgrade-strategies]
  updateStrategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 1
  # -- Volume mounts for `teams-api`. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for `teams-api`. [Reference][volumes].
  volumes: []

# FiftyOne App (`fiftyone-app`) configurations
appSettings:
  autoscaling:
    # -- Controls horizontal pod autoscaling for `fiftyone-app`. [Reference][autoscaling].
    enabled: false
    # -- Maximum replicas for horizontal pod autoscaling for `fiftyone-app`.
    maxReplicas: 20
    # -- Minimum Replicas for horizontal pod autoscaling for `fiftyone-app`.
    minReplicas: 2
    # -- Percent CPU utilization for autoscaling for `fiftyone-app`.
    targetCPUUtilizationPercentage: 80
    # -- Percent memory utilization for autoscaling for `fiftyone-app`.
    targetMemoryUtilizationPercentage: 80
  # -- Annotations for the `fiftyone-app` deployment. [Reference][annotations].
  deploymentAnnotations: {}
  # Environment Variables are passed to the `fiftyone-app` containers
  env:
    # -- Controls whether the client is allowed to trigger database migrations.
    # [Reference][fiftyone-config].
    FIFTYONE_DATABASE_ADMIN: false
    # -- Controls whether cloud media images will be downloaded and added to
    # the local cache upon viewing media in the app.
    FIFTYONE_MEDIA_CACHE_APP_IMAGES: false
    # -- Set the media cache size (in bytes) for the local FiftyOne App processes.
    # When not set, the app's default value is 32 GiB.
    # `-1` disables the media cache garbage collection (and cache size is unlimited).
    FIFTYONE_MEDIA_CACHE_SIZE_BYTES: -1
    # -- Set the time-to-live for signed URLs generated by the application in hours
    FIFTYONE_SIGNED_URL_EXPIRATION: 24
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Enterprise, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true
    # TODO: Kevin - Determine how to document these.... skipping for now.
    # These are nonsensitive since you're mounting them from secrets below
    # AWS_CONFIG_FILE=/opt/secrets/aws/aws-credentials-file
    # GOOGLE_APPLICATION_CREDENTIALS=/opt/secrets/google/service-account
    # MINIO_CONFIG_FILE=/opt/secrets/minio/minio-credentials-file

  # -- Secret variables to be passed to the `fiftyone-app` containers.
  secretEnv: {}
  #   ENV_VAR_NAME:
  #     secretName: the-pre-existing-secret
  #     secretKey: the-key-in-the-secret

  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for `fiftyone-app`.
    repository: voxel51/fiftyone-app
    # -- Image tag for `fiftyone-app`. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `fiftyone-app` related objects. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the `fiftyone-app` deployment's ReplicaSet.
  # Ignored when `appSettings.autoscaling.enabled: true`. [Reference][deployment].
  replicaCount: 2

  # Instead of setting default resources, we require the user define them
  # This enables running on resource constrained environments
  # (like Minikube). To set resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces (`{}`) after 'resources:'.
  # -- Container resource requests and limits for `fiftyone-app`. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 512Mi
  service:
    # -- Service annotations for `fiftyone-app`. [Reference][annotations].
    annotations: {}
    # -- Service container port for `fiftyone-app`.
    containerPort: 5151
    # -- Service name.
    name: fiftyone-app
    # -- (int) Service nodePort set only when `appSettings.service.type: NodePort` for `fiftyone-app`.
    nodePort:
    # -- Service port.
    port: 80
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # TODO: Alex - Default should include protocol in the name per kubernetes standards.
    # -- Port name (maximum length is 15 characters) for `fiftyone-app`. [Reference][ports].
    shortname: fiftyone-app
    # -- Service type for `fiftyone-app`. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for `fiftyone-app`. [Reference][affinity].
  affinity: {}
  initContainers:
    # -- Container security configuration for `fiftyone-app` `initContainers`. [Reference][container-security-context].
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      runAsNonRoot: true
      runAsUser: 1000
    # -- Whether to enable init containers for `fiftyone-app`. [Reference][init-containers].
    enabled: true
    image:
      # -- Init container images repositories for `fiftyone-app`. [Reference][init-containers].
      repository: docker.io/busybox
      # -- Init container images tags for `fiftyone-app`. [Reference][init-containers].
      tag: stable-glibc
    # -- Container resource requests and limits for the `fiftyone-app` `initContainers`. [Reference][resources].
    resources:
      limits:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
      requests:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
  liveness:
    # -- Number of times to retry the liveness probe for the `fiftyone-app`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the liveness probe for `fiftyone-app`. [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the liveness probe for the `fiftyone-app`. [Reference][probes].
    timeoutSeconds: 5
  # -- nodeSelector for `fiftyone-app`. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for pods for `fiftyone-app`. [Reference][annotations].
  podAnnotations: {}
  # -- Pod Disruption Budget for pods for `fiftyone-app`. [Reference][pod-disruption-budget].
  podDisruptionBudget:
    # -- Whether a pod disruption budget is enabled for `fiftyone-app`.
    enabled: false
    # -- Sets the minimum available or maximum unavailable replicas for the deployment object.
    # Either integers or percentages supported.
    # `maxUnavailable` is also supported, however, only one setting can be used at a time.
    # If both are set, `minAvailable` will be preferred.
    minAvailable: ""
    # maxUnavailable: ""
  # -- Pod-level security attributes and common container settings for `fiftyone-app`. [Reference][security-context].
  podSecurityContext: {}
  readiness:
    # -- Number of times to retry the readiness probe for the `fiftyone-app`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the readiness probe for `fiftyone-app`. [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the readiness probe for the `fiftyone-app`. [Reference][probes].
    timeoutSeconds: 5
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for `fiftyone-app`. [Reference][container-security-context].
  securityContext: {}
  startup:
    # -- Number of times to retry the startup probe for the `fiftyone-app`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the startup probe for `fiftyone-app`. [Reference][probes].
    periodSeconds: 30
    # -- Timeout for the startup probe for the `fiftyone-app`. [Reference][probes].
    timeoutSeconds: 5
  # -- Allow the k8s scheduler to schedule `fiftyone-app` pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Control how Pods are spread across your distributed footprint.
  # Label selectors will be defaulted to those of the `fiftyone-app` deployment. [Reference][topology-spread-constraints].
  topologySpreadConstraints: []
  # -- Control how `fiftyone-app` pods are redeployed during an upgrade. [Reference][upgrade-strategies]
  updateStrategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 1
  # -- Volume mounts for `fiftyone-app`. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for `fiftyone-app`. [Reference][volumes].
  volumes: []

# Central Authentication Service (`teams-cas`) configurations
casSettings:
  # -- Annotations for the `teams-cas` deployment. [Reference][annotations].
  deploymentAnnotations: {}
  # -- Allow ADMINs to invite users by email
  # NOTE: This is currently not supported when `FIFTYONE_AUTH_MODE: internal`
  enable_invitations: true
  # Environment Variables are passed to the `teams-cas` containers
  env:
    # -- Provide the name for the CAS database.
    # When multiple deployments use the same database instance,
    # set `CAS_DATABASE_NAME` to a unique value for each deployment.
    CAS_DATABASE_NAME: cas
    # -- Set the default user role for new users
    # One of `GUEST`, `COLLABORATOR`, `MEMBER`, `ADMIN`
    CAS_DEFAULT_USER_ROLE: GUEST
    # -- The key from `secret.fiftyone.name` that contains the CAS MongoDB
    # Connection String.
    CAS_MONGODB_URI_KEY: mongodbConnectionString
    # -- Set the log level for CAS
    # examples:
    # `DEBUG: cas:*` - shows all CAS logs
    # `DEBUG: cas:*:info` - shows all CAS INFO logs
    # `DEBUG: cas:*,-cas:*:debug` - shows all CAS logs except DEBUG logs
    DEBUG: cas:*,-cas:*:debug
    # -- Configure Authentication Mode.
    # One of `legacy` or `internal`
    FIFTYONE_AUTH_MODE: legacy

  # -- Secret variables to be passed to the `teams-cas` containers.
  secretEnv: {}
  #   ENV_VAR_NAME:
  #     secretName: the-pre-existing-secret
  #     secretKey: the-key-in-the-secret

  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for `teams-cas`.
    repository: voxel51/fiftyone-teams-cas
    # -- Image tag for `teams-cas`. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-cas` related objects. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the `teams-cas` deployment's ReplicaSet. [Reference][deployment].
  replicaCount: 2

  # Instead of setting default resources, we require the user define them
  # This enables running on resource constrained environments
  # (like Minikube). To set resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces (`{}`) after 'resources:'.
  # -- Container resource requests and limits for `teams-cas`. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 512Mi
  service:
    # -- Service annotations for `teams-cas`. [Reference][annotations].
    annotations: {}
    # -- Service container port for `teams-cas`.
    containerPort: 3000
    # -- Service name.
    name: teams-cas
    # -- (int) Service nodePort set only when `casSettings.service.type: NodePort` for `teams-cas`.
    nodePort:
    # -- Service port.
    port: 80
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # TODO: Alex - Default should include protocol in the name per kubernetes standards.
    # -- Port name (maximum length is 15 characters) for `teams-cas`. [Reference][ports].
    shortname: teams-cas
    # -- Service type for `teams-cas`. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for `teams-cas`. [Reference][affinity].
  affinity: {}
  initContainers:
    # -- Container security configuration for `teams-cas` `initContainers`. [Reference][container-security-context].
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      runAsNonRoot: true
      runAsUser: 1000
    # -- Whether to enable init containers for `teams-cas`. [Reference][init-containers].
    enabled: true
    image:
      # -- Init container images repositories for `teams-cas`. [Reference][init-containers].
      repository: docker.io/busybox
      # -- Init container images tags for `teams-cas`. [Reference][init-containers].
      tag: stable-glibc
    # -- Container resource requests and limits for the `teams-cas` `initContainers`. [Reference][resources].
    resources:
      limits:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
      requests:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
  liveness:
    # -- Number of times to retry the liveness probe for the `teams-cas`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the liveness probe for `teams-cas`. [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the liveness probe for the `teams-cas`. [Reference][probes].
    timeoutSeconds: 5
  # -- nodeSelector for `teams-cas`. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for pods for `teams-cas`. [Reference][annotations].
  podAnnotations: {}
  # -- Pod Disruption Budget for pods for `teams-cas`. [Reference][pod-disruption-budget].
  podDisruptionBudget:
    # -- Whether a pod disruption budget is enabled for `teams-cas`.
    enabled: false
    # -- Sets the minimum available or maximum unavailable replicas for the deployment object.
    # Either integers or percentages supported.
    # `maxUnavailable` is also supported, however, only one setting can be used at a time.
    # If both are set, `minAvailable` will be preferred.
    minAvailable: ""
    # maxUnavailable: ""
  readiness:
    # -- Number of times to retry the readiness probe for the `teams-cas`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the readiness probe for `teams-cas`. [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the readiness probe for the `teams-cas`. [Reference][probes].
    timeoutSeconds: 5
  # -- Pod-level security attributes and common container settings for `teams-cas`. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for `teams-cas`. [Reference][container-security-context].
  securityContext: {}
  startup:
    # -- Number of times to retry the startup probe for the `teams-cas`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the startup probe for `teams-cas`. [Reference][probes].
    periodSeconds: 30
    # -- Timeout for the startup probe for the `teams-cas`. [Reference][probes].
    timeoutSeconds: 5
  # -- Allow the k8s scheduler to schedule `teams-cas` pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Control how Pods are spread across your distributed footprint.
  # Label selectors will be defaulted to those of the `teams-cas` deployment. [Reference][topology-spread-constraints].
  topologySpreadConstraints: []
  # -- Control how `teams-cas` pods are redeployed during an upgrade. [Reference][upgrade-strategies]
  updateStrategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 1
  # -- Volume mounts for `teams-cas`. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for `teams-cas`. [Reference][volumes].
  volumes: []

# FiftyOne Enterprise Delegated Operator Executor (teams-do) configurations.
delegatedOperatorDeployments:
  # -- A common template applied to all deployments. Each deployment can
  # then override individual fields as needed by the operator.
  template:
    # Environment Variables are passed to the delegated-operator-executor containers.
    env:
      # -- Full path to a network-mounted file system or a cloud storage path to
      # use for storing logs generated by delegated operation runs, one file
      # per job. The default `""` means log upload is disabled.
      FIFTYONE_DELEGATED_OPERATION_LOG_PATH: ""
      # -- Set the media cache size (in bytes) for the local FiftyOne Delegated
      # Operator Executor processes.
      # When not set, the app's default value is 32 GiB.
      # `-1` disables the media cache garbage collection (and cache size is unlimited).
      FIFTYONE_MEDIA_CACHE_SIZE_BYTES: -1
      # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
      # -- Whether the SDK is running in an internal service context.
      # When running in FiftyOne Enterprise, set to `true`.
      FIFTYONE_INTERNAL_SERVICE: true

    # -- A description for the delegated operator instance. This is unused
    # in the template context. Each operator should either set their own
    # description or, optionally, use the default. If unset at the
    # operator context, it will be defaulted to
    # `Long running operations delegated to $name` where `$name` is the name
    # of the Deployment object.
    description: ""
    # -- Annotations for the `teams-do` deployment. [Reference][annotations].
    deploymentAnnotations: {}
    # -- Secret variables to be passed to the delegated-operator-executor containers.
    secretEnv: {}
    #   ENV_VAR_NAME:
    #     secretName: the-pre-existing-secret
    #     secretKey: the-key-in-the-secret

    image:
      # -- Instruct when the kubelet should pull (download) the specified image.
      # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
      pullPolicy: Always
      # -- Container image for `delegated-operator-executor`.
      repository: voxel51/fiftyone-teams-cv-full
      # -- Image tag for `delegated-operator-executor`. Defaults to the chart version.
      tag: ""
    # -- Additional labels for the `delegated-operator-executor` related objects. [Reference][labels-and-selectors].
    labels: {}
    liveness:
      # -- Number of times to retry the liveness probe for the `teams-do`. [Reference][probes].
      failureThreshold: 5
      # -- How often (in seconds) to perform the liveness probe for `teams-do`. [Reference][probes].
      periodSeconds: 30
      # -- Timeout for the liveness probe for the `teams-do`. [Reference][probes].
      timeoutSeconds: 30
    # -- Number of pods in the delegated-operator-executor deployment's ReplicaSet.
    # This should not exceed the value set in the deployment's license file for
    #  max concurrent delegated operators, which defaults to 3.
    replicaCount: 3

    # Instead of setting default resources, we require the user define them
    # This enables running on resource constrained environments
    # (like Minikube). To set resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces (`{}`) after 'resources:'.
    # -- Container resource requests and limits for `delegated-operator-executor`. [Reference][resources].
    resources:
      limits: {}
      #   cpu: 2
      #   memory: 6Gi
      requests: {}
      #   cpu: 500m
      #   memory: 1Gi

    # -- Affinity and anti-affinity for `delegated-operator-executor`. [Reference][affinity].
    affinity: {}
    # -- nodeSelector for `delegated-operator-executor`. [Reference][node-selector].
    nodeSelector: {}
    # -- Annotations for delegated-operator-executor pods. [Reference][annotations].
    podAnnotations: {}
    podDisruptionBudget:
      # -- Whether a pod disruption budget is enabled for `teams-plugins`.
      enabled: false
      # -- Sets the minimum available or maximum unavailable replicas for the deployment object.
      # Either integers or percentages supported.
      # `maxUnavailable` is also supported, however, only one setting can be used at a time.
      # If both are set, `minAvailable` will be preferred.
      minAvailable: ""
      # maxUnavailable: ""
    # -- Pod-level security attributes and common container settings for `delegated-operator-executor`. [Reference][security-context].
    podSecurityContext: {}
    readiness:
      # -- Number of times to retry the readiness probe for the `teams-do`. [Reference][probes].
      failureThreshold: 5
      # -- How often (in seconds) to perform the readiness probe for `teams-do`. [Reference][probes].
      periodSeconds: 30
      # -- Timeout for the readiness probe for the `teams-do`. [Reference][probes].
      timeoutSeconds: 30
    # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
    # -- Container security configuration for `delegated-operator-executor`. [Reference][container-security-context].
    securityContext: {}
    startup:
      # -- Number of times to retry the startup probe for the `teams-do`. [Reference][probes].
      failureThreshold: 5
      # -- How often (in seconds) to perform the startup probe for `teams-do`. [Reference][probes].
      periodSeconds: 30
      # -- Timeout for the startup probe for the `teams-do`. [Reference][probes].
      timeoutSeconds: 30
    # -- Control how Pods are spread across your distributed footprint.
    # Label selectors will be defaulted to those of the `teams-do` deployment(s). [Reference][topology-spread-constraints].
    topologySpreadConstraints: []
    # -- Control how `teams-do` pods are redeployed during an upgrade. [Reference][upgrade-strategies]
    updateStrategy:
      type: RollingUpdate
      # rollingUpdate:
      #   maxUnavailable: 1
    # -- Allow the k8s scheduler to schedule delegated-operator-executor pods with matching taints. [Reference][taints-and-tolerations].
    tolerations: []
    # -- Volume mounts for delegated-operator-executor pods. [Reference][volumes].
    volumeMounts: []
    # -- Volumes for `delegated-operator-executor`. [Reference][volumes].
    volumes: []

  # -- Additional deployments to configure. Each template
  # will use .Values.delegatedOperatorDeployments.template as a base.
  # Each template value may be overridden.
  # Maps/dictionaries will be merged key-wise, with the deployment instance
  # taking precedence.
  # List values will not be merged, but be overridden completely by the
  # deployment instance.
  deployments: {}
    # Example: Use values from base template only
    # teamsDo: {}
    #
    # Example: Configure Google GKE Autopilot nodes with GPUs and a custom log link path
    # gpuEnabled:
    #   env:
    #     FIFTYONE_DELEGATED_OPERATION_LOG_PATH: gs://mygpulogs/
    #   nodeSelector:
    #     cloud.google.com/gke-accelerator: nvidia-l4
    #     cloud.google.com/gke-accelerator-count: "1"
    #   requests:
    #     nvidia.com/gpu: 1

# -- List of secrets for FiftyOne Enterprise Licenses (one per org)
fiftyoneLicenseSecrets:
  - fiftyone-license

# -- Container image registry keys. [Reference][image-pull-secrets].
imagePullSecrets: []

ingress:
  # -- Ingress annotations. [Reference][annotations].
  annotations: {}
  # -- The ingress rule values for teams-api, when `apiSettings.dnsName` is not empty.
  # [Reference][ingress-rules].
  api:
    path: /*
    pathType: ImplementationSpecific

  # -- Name of the ingress class.  When empty, a default Ingress class should be defined.
  # When not empty and Kubernetes version is >1.18.0, this value will be the Ingress class name.
  # [Reference][ingress-default-ingress-class]
  className: ""
  # -- Controls whether to create the ingress. When `false`, uses a pre-existing ingress.
  # [Reference][ingress].
  enabled: true

  # -- Additional labels for the ingress. [Reference][labels-and-selectors].
  labels: {}

  # -- Additional ingress rules for the host `teamsAppSettings.dnsName` for
  # the chart managed ingress (when `ingress.enabled: true`).
  # [Reference][ingress-rules].
  paths:
    # -- Ingress path for teams-cas
    - path: /cas
      # -- Ingress path type
      pathType: Prefix
      # -- Ingress path service name
      serviceName: teams-cas
      # -- (int) Ingress path service port
      servicePort: 80
    # -- Ingress path for teams-app
    - path: /*
      # -- Ingress path type
      pathType: ImplementationSpecific
      # -- Ingress path service name
      serviceName: teams-app
      # -- (int) Ingress path service port
      servicePort: 80

  # -- Controls whether the chart managed ingress contains a `spec.tls` stanza.
  tlsEnabled: true

  # -- Name of secret containing TLS certificate for `teams-app`.
  # Certificate should contain the host names `apiSettings.dnsName` and `teamsAppSettings.dnsName`.
  # When `ingress.tlsEnabled=True`, sets's the value of ingress' `spec.tls[0].secretName`.
  tlsSecretName: fiftyone-teams-tls-secret

namespace:
  # -- Controls whether to create the namespace.
  # When `false`, the namespace must already exists.
  create: false
  # -- The namespace name used for chart resources.
  name: fiftyone-teams

# FiftyOne Enterprise Plugins (teams-plugins) configurations. [Reference][fiftyone-plugins].
pluginsSettings:
  # -- Annotations for the `teams-plugins` deployment. [Reference][annotations].
  deploymentAnnotations: {}
  # -- Controls whether to create a dedicated `teams-plugins` deployment.
  enabled: false
  # [Reference][autoscaling].
  autoscaling:
    # -- Controls horizontal pod autoscaling for `teams-plugins`. [Reference][autoscaling].
    enabled: false
    # -- Maximum replicas for horizontal pod autoscaling for `teams-plugins`.
    maxReplicas: 20
    # -- Minimum Replicas for horizontal pod autoscaling for `teams-plugins`.
    minReplicas: 2
    # -- Percent CPU utilization for autoscaling for `teams-plugins`.
    targetCPUUtilizationPercentage: 80
    # -- Percent memory utilization for autoscaling for `teams-plugins`.
    targetMemoryUtilizationPercentage: 80
  # Environment Variables are passed to the `teams-plugins` containers.
  env:
    # -- Controls whether cloud media images will be downloaded and added to
    # the local cache upon viewing media in the app.
    FIFTYONE_MEDIA_CACHE_APP_IMAGES: false
    # -- Set the media cache size (in bytes) for the local FiftyOne Plugins processes.
    # When not set, the app's default value is 32 GiB.
    # `-1` disables the media cache garbage collection (and cache size is unlimited).
    FIFTYONE_MEDIA_CACHE_SIZE_BYTES: -1
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Enterprise, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true

  # -- Secret variables to be passed to the `teams-plugins` containers.
  secretEnv: {}
  #   ENV_VAR_NAME:
  #     secretName: the-pre-existing-secret
  #     secretKey: the-key-in-the-secret

  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for `teams-plugins`.
    repository: voxel51/fiftyone-app
    # -- Image tag for `teams-plugins`. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-plugins` related objects. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the `teams-plugins` deployment's ReplicaSet.
  # Ignored when `pluginsSettings.autoscaling.enabled: true`. [Reference][deployment].
  replicaCount: 2

  # Instead of setting default resources, we require the user define them
  # This enables running on resource constrained environments
  # (like Minikube). To set resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces (`{}`) after 'resources:'.
  # -- Container resource requests and limits for `teams-plugins`. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 1Gi
  service:
    # -- Service annotations for `teams-plugins`. [Reference][annotations].
    annotations: {}
    # -- Service container port for `teams-plugins`.
    containerPort: 5151
    # -- Service name.
    name: teams-plugins
    # -- (int) Service nodePort set only when `pluginsSettings.service.type: NodePort` for `teams-plugins`.
    nodePort:
    # -- Service port.
    port: 80
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # TODO: Alex - Default should include protocol in the name per kubernetes standards.
    # -- Port name (maximum length is 15 characters) for `teams-plugins`. [Reference][ports].
    shortname: teams-plugins
    # -- Service type for `teams-plugins`. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for `teams-plugins`. [Reference][affinity].
  affinity: {}
  initContainers:
    # -- Container security configuration for `teams-plugins` `initContainers`. [Reference][container-security-context].
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      runAsNonRoot: true
      runAsUser: 1000
    # -- Whether to enable init containers for `teams-plugins`. [Reference][init-containers].
    enabled: true
    image:
      # -- Init container images repositories for `teams-plugins`. [Reference][init-containers].
      repository: docker.io/busybox
      # -- Init container images tags for `teams-plugins`. [Reference][init-containers].
      tag: stable-glibc
    # -- Container resource requests and limits for the `teams-plugins` `initContainers`. [Reference][resources].
    resources:
      limits:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
      requests:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
  liveness:
    # -- Number of times to retry the liveness probe for the `teams-plugins`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the liveness probe for `teams-plugins`. [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the liveness probe for the `teams-plugins`. [Reference][probes].
    timeoutSeconds: 5
  # -- nodeSelector for `teams-plugins`. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for `teams-plugins` pods. [Reference][annotations].
  podAnnotations: {}
  # -- Pod Disruption Budget for pods for `teams-plugins`. [Reference][pod-disruption-budget].
  podDisruptionBudget:
    # -- Whether a pod disruption budget is enabled for `teams-plugins`.
    enabled: false
    # -- Sets the minimum available or maximum unavailable replicas for the deployment object.
    # Either integers or percentages supported.
    # `maxUnavailable` is also supported, however, only one setting can be used at a time.
    # If both are set, `minAvailable` will be preferred.
    minAvailable: ""
    # maxUnavailable: ""
  # -- Pod-level security attributes and common container settings for `teams-plugins`. [Reference][security-context].
  podSecurityContext: {}
  readiness:
    # -- Number of times to retry the readiness probe for the `teams-plugins`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the readiness probe for `teams-plugins`. [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the readiness probe for the `teams-plugins`. [Reference][probes].
    timeoutSeconds: 5
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for `teams-plugins`. [Reference][container-security-context].
  securityContext: {}
  startup:
    # -- Number of times to retry the startup probe for the `teams-plugins`. [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the startup probe for `teams-plugins`. [Reference][probes].
    periodSeconds: 30
    # -- Timeout for the startup probe for the `teams-plugins`. [Reference][probes].
    timeoutSeconds: 5
  # -- Allow the k8s scheduler to schedule `teams-plugins` pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Control how Pods are spread across your distributed footprint.
  # Label selectors will be defaulted to those of the `teams-plugins` deployment. [Reference][topology-spread-constraints].
  topologySpreadConstraints: []
  # -- Control how `teams-plugins` pods are redeployed during an upgrade. [Reference][upgrade-strategies]
  updateStrategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 1
  # -- Volume mounts for `teams-plugins` pods. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for `teams-plugins`. [Reference][volumes].
  volumes: []

secret:
  # -- Controls whether to create the secret named `secret.name`.
  create: true
  # -- Name of the secret (existing or to be created) in the namespace `namespace.name`.
  name: fiftyone-teams-secrets
  fiftyone:
    # -- MongoDB Database Name for FiftyOne Enterprise.
    fiftyoneDatabaseName: ""
    # -- MongoDB Connection String. [Reference][mongodb-connection-string].
    mongodbConnectionString: ""

    # -- A randomly generated string for cookie encryption.
    # To generate, run `openssl rand -hex 32`.
    cookieSecret: ""
    # -- Encryption key for storage credentials. [Reference][fiftyone-encryption-key].
    encryptionKey: ""
    # -- A randomly generated string for CAS Authentication.
    # This can be any string you care to use generated by any mechanism you
    #   prefer.
    # This is used for inter-service authentication and for the SuperUser to
    #  authenticate at the CAS UI to configure the Central Authentication Service.
    fiftyoneAuthSecret: ""
  # -- Additional labels for the generated secret. [Reference][labels-and-selectors].
  labels: {}

serviceAccount:
  # -- Service Account annotations. [Reference][annotations].
  annotations: {}
  # -- Controls whether to create the service account named `serviceAccount.name`.
  create: true
  # -- Name of the service account (existing or to be created) in the namespace `namespace.name` used for deployments.
  # [Reference][service-account].
  name: "fiftyone-teams"
  # -- Additional labels for the generated service account. [Reference][labels-and-selectors].
  labels: {}

# FiftyOne Enterprise App (teams-app) configurations
teamsAppSettings:
  # [Reference][autoscaling].
  autoscaling:
    # -- Controls horizontal pod autoscaling for `teams-app`.  [Reference][autoscaling].
    enabled: false
    # -- Maximum Replicas for horizontal autoscaling for `teams-app`.
    maxReplicas: 5
    # -- Minimum Replicas for horizontal autoscaling for `teams-app`.
    minReplicas: 2
    # -- Percent CPU utilization for autoscaling for `teams-app`.
    targetCPUUtilizationPercentage: 80
    # -- Percent memory utilization for autoscaling for `teams-app`.
    targetMemoryUtilizationPercentage: 80

  # -- DNS Name for the `teams-app` service.
  # Used in the chart managed ingress (`spec.tls.hosts` and `spec.rules[0].host`)
  dnsName: ""
  # -- Annotations for the `teams-app` `Deployment`. [Reference][annotations].
  deploymentAnnotations: {}
  # Environment Variables are passed to the `teams-app` containers.
  env:
    # -- Controls the protocol of the `teams-app`.  Configure your ingress to match.
    # When `true`, uses the https protocol.
    # When `false`, uses the http protocol.
    APP_USE_HTTPS: true
    # -- When `false`, disables media export options
    FIFTYONE_APP_ALLOW_MEDIA_EXPORT: true
    # -- The recommended fiftyone SDK version that will be displayed in the
    # install modal (i.e. `pip install ... fiftyone==0.11.0`).
    FIFTYONE_APP_TEAMS_SDK_RECOMMENDED_VERSION: 2.9.0
    # -- The default theme configuration.
    # `dark`: Theme will be dark when user visits for the first time.
    # `light`: Theme will be light theme when user visits for the first time.
    # `always-dark`: Sets dark theme on each refresh (overrides user theme changes in the app).
    # `always-light`: Sets light theme on each refresh (overrides user theme changes in the app).
    FIFTYONE_APP_THEME: dark
    # -- Disable duplicate atom/selector key checking that generated false-positive errors.
    # [Reference][recoil-env].
    RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED: false
    # -- Controls whether anonymous analytics are captured for the
    # application. Set to false to opt-out of anonymous analytics.
    FIFTYONE_APP_ANONYMOUS_ANALYTICS_ENABLED: true
    # -- Controls whether Query Performance mode is enabled by default for
    # every dataset for the teams application. Set to false to set default mode to off.
    FIFTYONE_APP_DEFAULT_QUERY_PERFORMANCE: true
    # -- Controls whether Query Performance mode is enabled for the
    # application. Set to false to disable Query Performance mode for entire application.
    FIFTYONE_APP_ENABLE_QUERY_PERFORMANCE: true

  # -- Secret variables to be passed to the `teams-app` containers.
  secretEnv: {}
  #   ENV_VAR_NAME:
  #     secretName: the-pre-existing-secret
  #     secretKey: the-key-in-the-secret

  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for `teams-app`.
    repository: voxel51/fiftyone-teams-app
    # -- Image tag for `teams-app`.  Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-app` related objects. [Reference][labels-and-selectors].
  labels: {}
  # -- Overrides the `FIFTYONE_API_URI` environment variable. When set
  # `FIFTYONE_API_URI` controls the value shown in the API Key Modal providing guidance
  # for connecting to the FiftyOne Enterprise API.
  # `FIFTYONE_API_URI` uses the value from apiSettings.dnsName if it is set, or
  # uses the teamsAppSettings.dnsName
  fiftyoneApiOverride: ""

  # -- Number of pods in the `teams-app` deployment's ReplicaSet.
  # Ignored when `teamsAppSettings.autoscaling.enabled: true`. [Reference][deployment].
  replicaCount: 2

  # Instead of setting default resources, we require the user define them
  # This enables running on resource constrained environments
  # (like Minikube). To set resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces (`{}`) after 'resources:'.
  # -- Container resource requests and limits for `teams-app`.  [Reference][resources].
  resources:
    limits: {}
    #   cpu: 1
    #   memory: 2Gi
    requests: {}
    #   cpu: 500m
    #   memory: 1Gi
  service:
    # -- Service annotations for `teams-app`.  [Reference][annotations].
    annotations: {}
    # -- Service container port for `teams-app`.
    containerPort: 3000
    # -- Service name.
    name: teams-app
    # -- (int) Service nodePort set only when `teamsAppSettings.service.type: NodePort` for `teams-app`.
    nodePort:
    # -- Service port.
    port: 80
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # TODO: Alex - Default should include protocol in the name per kubernetes standards.
    # -- Port name (maximum length is 15 characters) for `teams-app`.  [Reference][ports].
    shortname: teams-app
    # -- Service type for `teams-app`.  [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for `teams-app`.  [Reference][affinity].
  affinity: {}
  initContainers:
    # -- Container security configuration for `teams-app` `initContainers`. [Reference][container-security-context].
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      runAsNonRoot: true
      runAsUser: 1000
    # -- Whether to enable init containers for `teams-app`.  [Reference][init-containers].
    enabled: true
    image:
      # -- Init container images repositories for `teams-app`.  [Reference][init-containers].
      repository: docker.io/busybox
      # -- Init container images tags for `teams-app`.  [Reference][init-containers].
      tag: stable-glibc
    # -- Container resource requests and limits for the `teams-app` `initContainers`. [Reference][resources].
    resources:
      limits:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
      requests:
        cpu: 10m
        ephemeral-storage: 64Mi
        memory: 128Mi
  liveness:
    # -- Number of times to retry the liveness probe for the `teams-app`.  [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the liveness probe for `teams-app`.  [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the liveness probe for the `fiftyone-app`. [Reference][probes].
    timeoutSeconds: 5
  # -- nodeSelector for `teams-app`.  [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for `teams-app` pods. [Reference][annotations].
  podAnnotations: {}
  # -- Pod Disruption Budget for pods for `teams-app`. [Reference][pod-disruption-budget].
  podDisruptionBudget:
    # -- Whether a pod disruption budget is enabled for `teams-app`.
    enabled: false
    # -- Sets the minimum available or maximum unavailable replicas for the deployment object.
    # Either integers or percentages supported.
    # `maxUnavailable` is also supported, however, only one setting can be used at a time.
    # If both are set, `minAvailable` will be preferred.
    minAvailable: ""
    # maxUnavailable: ""
  # -- Pod-level security attributes and common container settings for `teams-app`.  [Reference][security-context].
  podSecurityContext: {}
  readiness:
    # -- Number of times to retry the readiness probe for the `teams-app`.  [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the readiness probe for `teams-app`.  [Reference][probes].
    periodSeconds: 15
    # -- Timeout for the readiness probe for the `fiftyone-app`. [Reference][probes].
    timeoutSeconds: 5
  # TODO: Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for `teams-app`.  [Reference][container-security-context].
  securityContext: {}
  startup:
    # -- Number of times to retry the startup probe for the `teams-app`.  [Reference][probes].
    failureThreshold: 5
    # -- How often (in seconds) to perform the startup probe for `teams-app`.  [Reference][probes].
    periodSeconds: 30
    # -- Timeout for the startup probe for the `fiftyone-app`. [Reference][probes].
    timeoutSeconds: 5
  # -- Allow the k8s scheduler to schedule `teams-app` pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Control how Pods are spread across your distributed footprint.
  # Label selectors will be defaulted to those of the `teams-app` deployment. [Reference][topology-spread-constraints].
  topologySpreadConstraints: []
  # -- Control how `teams-app` pods are redeployed during an upgrade. [Reference][upgrade-strategies]
  updateStrategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 1
  # -- Volume mounts for `teams-app` pods. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for `teams-app` pods. [Reference][volumes].
  volumes: []
