---
# FiftyOne Teams API (teams-api)
apiSettings:
  # -- Controls whether teams-api is added to the chart's ingress.
  # When an empty string, a rule for teams-api is not added to the chart managed ingress.
  # When not an empty string, becomes the value to the `host` in the ingress' rule and
  # set `ingress.api` too.
  dnsName: ""
  # Environment Variables are passed to the teams-api containers
  env:
    # -- Controls FiftyOne GraphQL verbosity.
    # When "production", debug mode is disabled and the default logging level is "INFO".
    # When "development", debug mode is enabled and the default logging level is "DEBUG".
    # Can be overridden by setting `apiSettings.env.LOGGING_LEVEL`.
    FIFTYONE_ENV: production
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Teams, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true
    # -- Default number of returned items when listing in GraphQL queries.
    # Can be overridden in the request.
    GRAPHQL_DEFAULT_LIMIT: 10
    # -- Logging level. Overrides the value of `FIFTYONE_ENV`.
    # Can be one of "DEBUG", "INFO", "WARN", "ERROR", or "CRITICAL".
    LOGGING_LEVEL: INFO
  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for the teams-api.
    repository: voxel51/fiftyone-teams-api
    # -- Image tag for teams-api. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-api` deployment. [Reference][labels-and-selectors].
  labels: {}

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- Container resource requests and limits for teams-api. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 512Mi
  service:
    # -- Service annotations for teams-api. [Reference][annotations].
    annotations: {}
    # -- Service container port for teams-api.
    containerPort: 8000
    liveness:
      # -- Number of seconds to wait before performing the liveness probe for teams-api. [Reference][probes].
      initialDelaySeconds: 15
    # -- Service name.
    name: teams-api
    # -- (int) Service nodePort set only when `apiSettings.service.type: NodePort` for teams-api.
    nodePort:
    # -- Service port for teams-api.
    port: 80
    readiness:
      # -- Number of seconds to wait before performing the readiness probe for teams-api. [Reference][probes].
      initialDelaySeconds: 15
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # -- Port name (maximum length is 15 characters) for teams-api. [Reference][ports].
    shortname: teams-api
    # -- Service type for teams-api. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for teams-api. [Reference][affinity].
  affinity: {}
  # -- nodeSelector for teams-api. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for pods for teams-api. [Reference][annotations].
  podAnnotations: {}
  # -- Pod-level security attributes and common container settings for teams-api. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext``
  # -- Container security configuration for teams-api. [Reference][container-security-context].
  securityContext: {}
  # -- Allow the k8s scheduler to schedule pods with matching taints for teams-api. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Volume mounts for teams-api. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for teams-api. [Reference][volumes].
  volumes: []

# FiftyOne App (fiftyone-app) configurations
appSettings:
  autoscaling:
    # -- Controls horizontal pod autoscaling for fiftyone-app. [Reference][autoscaling].
    enabled: false
    # -- Maximum replicas for horizontal pod autoscaling for fiftyone-app.
    maxReplicas: 20
    # -- Minimum Replicas for horizontal pod autoscaling for fiftyone-app.
    minReplicas: 2
    # -- Percent CPU utilization for autoscaling for fiftyone-app.
    targetCPUUtilizationPercentage: 80
    # -- Percent memory utilization for autoscaling for fiftyone-app.
    targetMemoryUtilizationPercentage: 80
  # Environment Variables are passed to the fiftyone-app containers
  env:
    # -- Controls whether the client is allowed to trigger database migrations.
    # [Reference][fiftyone-config].
    FIFTYONE_DATABASE_ADMIN: false
    # -- Controls whether cloud media images will be downloaded and added to
    # the local cache upon viewing media in the app.
    FIFTYONE_MEDIA_CACHE_APP_IMAGES: false
    # -- Set the media cache size (in bytes) for the local FiftyOne App processes.
    # The default value is 32 GiB.
    # `-1` is disabled.
    FIFTYONE_MEDIA_CACHE_SIZE_BYTES: -1
    # -- Set the time-to-live for signed URLs generated by the application in hours
    FIFTYONE_SIGNED_URL_EXPIRATION: 24
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Teams, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true
    # TODO: Kevin - Determine how to document these.... skipping for now.
    # These are nonsensitive since you're mounting them from secrets below
    # AWS_CONFIG_FILE=/opt/secrets/aws/aws-credentials-file
    # GOOGLE_APPLICATION_CREDENTIALS=/opt/secrets/google/service-account
    # MINIO_CONFIG_FILE=/opt/secrets/minio/minio-credentials-file
  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for fiftyone-app.
    repository: voxel51/fiftyone-app
    # -- Image tag for fiftyone-app. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `fiftyone-app` deployment. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the fiftyone-app deployment's ReplicaSet.
  # Ignored when `appSettings.autoscaling.enabled: true`. [Reference][deployment].
  replicaCount: 2

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- Container resource requests and limits for fiftyone-app. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 512Mi
  service:
    # -- Service annotations for fiftyone-app. [Reference][annotations].
    annotations: {}
    # -- Service container port for fiftyone-app.
    containerPort: 5151
    liveness:
      # -- Number of seconds to wait before performing the liveness probe for fiftyone-app. [Reference][probes].
      initialDelaySeconds: 15
    # -- Service name.
    name: fiftyone-app
    # -- (int) Service nodePort set only when `appSettings.service.type: NodePort` for fiftyone-app.
    nodePort:
    # -- Service port.
    port: 80
    readiness:
      # -- Number of seconds to wait before performing the readiness probe for fiftyone-app. [Reference][probes].
      initialDelaySeconds: 15
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # -- Port name (maximum length is 15 characters) for fiftyone-app. [Reference][ports].
    shortname: fiftyone-app
    # -- Service type for fiftyone-app. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for fiftyone-app. [Reference][affinity].
  affinity: {}
  # -- nodeSelector for fiftyone-app. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for pods for fiftyone-app. [Reference][annotations].
  podAnnotations: {}
  # -- Pod-level security attributes and common container settings for fiftyone-app. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext
  # -- Container security configuration for fiftyone-app. [Reference][container-security-context].
  securityContext: {}
  # -- Allow the k8s scheduler to schedule fiftyone-app pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Volume mounts for fiftyone-app. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for fiftyone-app. [Reference][volumes].
  volumes: []

# Central Authentication Service (teams-cas) configurations
casSettings:
  # -- Allow ADMINs to invite users by email
  # NOTE: This is currently not supported when `FIFTYONE_AUTH_MODE: internal`
  enable_invitations: true
  # Environment Variables are passed to the teams-cas containers
  env:
    # -- Provide the name for the CAS database.
    # When multiple deployments use the same database instance,
    # set `CAS_DATABASE_NAME` to a unique value for each deployment.
    CAS_DATABASE_NAME: cas
    # -- Set the default user role for new users
    # One of `GUEST`, `COLLABORATOR`, `MEMBER`, `ADMIN`
    CAS_DEFAULT_USER_ROLE: GUEST
    # -- The key from `secret.fiftyone.name` that contains the CAS MongoDB
    # Connection String.
    CAS_MONGODB_URI_KEY: mongodbConnectionString
    # -- Set the log level for CAS
    # examples:
    # `DEBUG: cas:*` - shows all CAS logs
    # `DEBUG: cas:*:info` - shows all CAS INFO logs
    # `DEBUG: cas:*,-cas:*:debug` - shows all CAS logs except DEBUG logs
    DEBUG: cas:*,-cas:*:debug
    # -- Configure Authentication Mode.
    # One of `legacy` or `internal`
    FIFTYONE_AUTH_MODE: legacy
  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for teams-cas.
    repository: voxel51/fiftyone-teams-cas
    # -- Image tag for teams-cas. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-cas` deployment. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the teams-cas deployment's ReplicaSet. [Reference][deployment].
  replicaCount: 2

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- Container resource requests and limits for teams-cas. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 512Mi
  service:
    # -- Service annotations for teams-cas. [Reference][annotations].
    annotations: {}
    # -- Service container port for teams-cas.
    containerPort: 3000
    liveness:
      # -- Number of seconds to wait before performing the liveness probe for fiftyone-app. [Reference][probes].
      initialDelaySeconds: 15
    # -- Service name.
    name: teams-cas
    # -- (int) Service nodePort set only when `casSettings.service.type: NodePort` for teams-cas.
    nodePort:
    # -- Service port.
    port: 80
    readiness:
      # -- Number of seconds to wait before performing the readiness probe for fiftyone-app. [Reference][probes].
      initialDelaySeconds: 15
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # -- Port name (maximum length is 15 characters) for teams-cas. [Reference][ports].
    shortname: teams-cas
    # -- Service type for teams-cas. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for teams-cas. [Reference][affinity].
  affinity: {}
  # -- nodeSelector for teams-cas. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for pods for teams-cas. [Reference][annotations].
  podAnnotations: {}
  # -- Pod-level security attributes and common container settings for teams-cas. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext
  # -- Container security configuration for teams-cas. [Reference][container-security-context].
  securityContext: {}
  # -- Allow the k8s scheduler to schedule teams-cas pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Volume mounts for teams-cas. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for teams-cas. [Reference][volumes].
  volumes: []
# FiftyOne Teams Plugins (teams-plugins) configurations. [Reference][fiftyone-plugins].

delegatedOperatorExecutorSettings:
  # Environment Variables are passed to the delegated-operator-executor containers.
  env:
    # -- Set the media cache size (in bytes) for the local FiftyOne Plugins processes.
    # The default value is 32 GiB.
    # `-1` is disabled.
    FIFTYONE_MEDIA_CACHE_SIZE_BYTES: -1
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Teams, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true
  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for delegated-operator-executor.
    repository: voxel51/fiftyone-app
    # -- Image tag for delegated-operator-executor. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `delegated-operator-executor` deployment. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the delegated-operator-executor deployment's ReplicaSet.
  # This should not exceed the value set in the deployment's license file for
  #  max concurrent delegated operators.
  # Set to 0 by default, meaning delegated operations will not be executed
  #  without an external executor system.
  replicaCount: 0

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- Container resource requests and limits for delegated-operator-executor. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 1Gi

  # -- Affinity and anti-affinity for delegated-operator-executor. [Reference][affinity].
  affinity: {}
  # -- Deployment name
  name: "teams-do"
  # -- nodeSelector for delegated-operator-executor. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for delegated-operator-executor pods. [Reference][annotations].
  podAnnotations: {}
  # -- Pod-level security attributes and common container settings for delegated-operator-executor. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for delegated-operator-executor. [Reference][container-security-context].
  securityContext: {}
  # -- Allow the k8s scheduler to schedule delegated-operator-executor pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Volume mounts for delegated-operator-executor pods. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for delegated-operator-executor. [Reference][volumes].
  volumes: []

# -- List of secrets for FiftyOne Teams Licenses (one per org)
fiftyoneLicenseSecrets:
  - fiftyone-license

# -- Container image registry keys. [Reference][image-pull-secrets].
imagePullSecrets: []

ingress:
  # -- Ingress annotations. [Reference][annotations].
  annotations: {}
  # -- The ingress rule values for teams-api, when `apiSettings.dnsName` is not empty.
  # [Reference][ingress-rules].
  api:
    path: /*
    pathType: ImplementationSpecific

  # -- Name of the ingress class.  When empty, a default Ingress class should be defined.
  # When not empty and Kubernetes version is >1.18.0, this value will be the Ingress class name.
  # [Reference][ingress-default-ingress-class]
  className: ""
  # -- Controls whether to create the ingress. When `false`, uses a pre-existing ingress.
  # [Reference][ingress].
  enabled: true

  # -- Additional labels for the ingress. [Reference][labels-and-selectors].
  labels: {}

  # -- Additional ingress rules for the host `teamsAppSettings.dnsName` for
  # the chart managed ingress (when `ingress.enabled: true`).
  # [Reference][ingress-rules].
  paths:
    # -- Ingress path for teams-cas
    - path: /cas
      # -- Ingress path type
      pathType: Prefix
      # -- Ingress path service name
      serviceName: teams-cas
      # -- (int) Ingress path service port
      servicePort: 80
    # -- Ingress path for teams-app
    - path: /*
      # -- Ingress path type
      pathType: ImplementationSpecific
      # -- Ingress path service name
      serviceName: teams-app
      # -- (int) Ingress path service port
      servicePort: 80

  # -- Controls whether the chart managed ingress contains a `spec.tls` stanza.
  tlsEnabled: true

  # -- Name of secret containing TLS certificate for teams-app.
  # Certificate should contain the host names `apiSettings.dnsName` and `teamsAppSettings.dnsName`.
  # When `ingress.tlsEnabled=True`, sets's the value of ingress' `spec.tls[0].secretName`.
  tlsSecretName: fiftyone-teams-tls-secret

namespace:
  # -- Controls whether to create the namespace.
  # When `false`, the namespace must already exists.
  create: false
  # -- The namespace name used for chart resources.
  name: fiftyone-teams

# FiftyOne Teams Plugins (teams-plugins) configurations. [Reference][fiftyone-plugins].
pluginsSettings:
  # -- Controls whether to create a dedicated "teams-plugins" deployment.
  enabled: false
  # [Reference][autoscaling].
  autoscaling:
    # -- Controls horizontal pod autoscaling for teams-plugins. [Reference][autoscaling].
    enabled: false
    # -- Maximum replicas for horizontal pod autoscaling for teams-plugins.
    maxReplicas: 20
    # -- Minimum Replicas for horizontal pod autoscaling for teams-plugins.
    minReplicas: 2
    # -- Percent CPU utilization for autoscaling for teams-plugins.
    targetCPUUtilizationPercentage: 80
    # -- Percent memory utilization for autoscaling for teams-plugins.
    targetMemoryUtilizationPercentage: 80
  # Environment Variables are passed to the teams-plugins containers.
  env:
    # -- Controls whether cloud media images will be downloaded and added to
    # the local cache upon viewing media in the app.
    FIFTYONE_MEDIA_CACHE_APP_IMAGES: false
    # -- Set the media cache size (in bytes) for the local FiftyOne Plugins processes.
    # The default value is 32 GiB.
    # `-1` is disabled.
    FIFTYONE_MEDIA_CACHE_SIZE_BYTES: -1
    # TODO: Kevin - remove from values. yaml and hardcode in `_helpers.tpl`
    # -- Whether the SDK is running in an internal service context.
    # When running in FiftyOne Teams, set to `true`.
    FIFTYONE_INTERNAL_SERVICE: true
  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for teams-plugins.
    repository: voxel51/fiftyone-app
    # -- Image tag for teams-plugins. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-plugins` deployment. [Reference][labels-and-selectors].
  labels: {}
  # -- Number of pods in the teams-plugins deployment's ReplicaSet.
  # Ignored when `pluginsSettings.autoscaling.enabled: true`. [Reference][deployment].
  replicaCount: 2

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- Container resource requests and limits for teams-plugins. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 2
    #   memory: 6Gi
    requests: {}
    #   cpu: 500m
    #   memory: 1Gi
  service:
    # -- Service annotations for teams-plugins. [Reference][annotations].
    annotations: {}
    # -- Service container port for teams-plugins.
    containerPort: 5151
    liveness:
      # -- Number of seconds to wait before performing the liveness probe teams-plugins. [Reference][probes].
      initialDelaySeconds: 15
    # -- Service name.
    name: teams-plugins
    # -- (int) Service nodePort set only when `pluginsSettings.service.type: NodePort` for teams-plugins.
    nodePort:
    # -- Service port.
    port: 80
    readiness:
      # -- Number of seconds to wait before performing the readiness probe for teams-plugins. [Reference][probes].
      initialDelaySeconds: 15
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # -- Port name (maximum length is 15 characters) for teams-plugins. [Reference][ports].
    shortname: teams-plugins
    # -- Service type for teams-plugins. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for teams-plugins. [Reference][affinity].
  affinity: {}
  # -- nodeSelector for teams-plugins. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for teams-plugins pods. [Reference][annotations].
  podAnnotations: {}
  # -- Pod-level security attributes and common container settings for teams-plugins. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Kevin/topher - Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for teams-plugins. [Reference][container-security-context].
  securityContext: {}
  # -- Allow the k8s scheduler to schedule teams-plugins pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Volume mounts for teams-plugins pods. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for teams-plugins. [Reference][volumes].
  volumes: []

secret:
  # -- Controls whether to create the secret named `secret.name`.
  create: true
  # -- Name of the secret (existing or to be created) in the namespace `namespace.name`.
  name: fiftyone-teams-secrets
  fiftyone:
    # -- MongoDB Database Name for FiftyOne Teams.
    fiftyoneDatabaseName: ""
    # -- MongoDB Connection String. [Reference][mongodb-connection-string].
    mongodbConnectionString: ""

    # -- A randomly generated string for cookie encryption.
    # To generate, run `openssl rand -hex 32`.
    cookieSecret: ""
    # -- Encryption key for storage credentials. [Reference][fiftyone-encryption-key].
    encryptionKey: ""
    # -- A randomly generated string for CAS Authentication.
    # This can be any string you care to use generated by any mechanism you
    #   prefer.
    # This is used for inter-service authentication and for the SuperUser to
    #  authenticate at the CAS UI to configure the Central Authentication Service.
    fiftyoneAuthSecret: ""
    # -- An admin API key to use for running delegated operations, like a service account.
    # <https://docs.voxel51.com/teams/api_connection.html#generating-an-api-key>
    # This key is only required if `.Values.delegatedOperatorExecutorSettings.replicaCount` is nonzero.
    delegatedOperatorApiKey: ""

serviceAccount:
  # -- Service Account annotations. [Reference][annotations].
  annotations: {}
  # -- Controls whether to create the service account named `serviceAccount.name`.
  create: true
  # -- Name of the service account (existing or to be created) in the namespace `namespace.name` used for deployments.
  # [Reference][service-account].
  name: "fiftyone-teams"

# FiftyOne Teams App (teams-app) configurations
teamsAppSettings:
  # [Reference][autoscaling].
  autoscaling:
    # -- Controls horizontal pod autoscaling for teams-app. [Reference][autoscaling].
    enabled: false
    # -- Maximum Replicas for horizontal autoscaling for teams-app.
    maxReplicas: 5
    # -- Minimum Replicas for horizontal autoscaling for teams-app.
    minReplicas: 2
    # -- Percent CPU utilization for autoscaling for teams-app.
    targetCPUUtilizationPercentage: 80
    # -- Percent memory utilization for autoscaling for teams-app.
    targetMemoryUtilizationPercentage: 80

  # -- DNS Name for the teams-app service.
  # Used in the chart managed ingress (`spec.tls.hosts` and `spec.rules[0].host`)
  dnsName: ""
  # Environment Variables are passed to the teams-app containers.
  env:
    # -- Controls the protocol of the teams-app. Configure your ingress to match.
    # When `true`, uses the https protocol.
    # When `false`, uses the http protocol.
    APP_USE_HTTPS: true
    # -- When `false`, disables media export options
    FIFTYONE_APP_ALLOW_MEDIA_EXPORT: true
    # -- The recommended fiftyone SDK version that will be displayed in the
    # install modal (i.e. `pip install ... fiftyone==0.11.0`).
    FIFTYONE_APP_TEAMS_SDK_RECOMMENDED_VERSION: 2.1.0
    # -- The default theme configuration.
    # `dark`: Theme will be dark when user visits for the first time.
    # `light`: Theme will be light theme when user visits for the first time.
    # `always-dark`: Sets dark theme on each refresh (overrides user theme changes in the app).
    # `always-light`: Sets light theme on each refresh (overrides user theme changes in the app).
    FIFTYONE_APP_THEME: dark
    # -- Disable duplicate atom/selector key checking that generated false-positive errors.
    # [Reference][recoil-env].
    RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED: false
    # -- Controls whether anonymous analytics are captured for the teams
    # application. Set to false to opt-out of anonymous analytics.
    FIFTYONE_APP_ANONYMOUS_ANALYTICS_ENABLED: true
  image:
    # -- Instruct when the kubelet should pull (download) the specified image.
    # One of `IfNotPresent`, `Always` or `Never`. Reference][image-pull-policy].
    pullPolicy: Always
    # -- Container image for teams-app.
    repository: voxel51/fiftyone-teams-app
    # -- Image tag for teams-app. Defaults to the chart version.
    tag: ""
  # -- Additional labels for the `teams-app` deployment. [Reference][labels-and-selectors].
  labels: {}
  # -- Overrides the `FIFTYONE_API_URI` environment variable. When set
  # `FIFTYONE_API_URI` controls the value shown in the API Key Modal providing guidance
  # for connecting to the FiftyOne Teams API.
  # `FIFTYONE_API_URI` uses the value from apiSettings.dnsName if it is set, or
  # uses the teamsAppSettings.dnsName
  fiftyoneApiOverride: ""

  # -- Number of pods in the teams-app deployment's ReplicaSet.
  # Ignored when `teamsAppSettings.autoscaling.enabled: true`. [Reference][deployment].
  replicaCount: 2

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # -- Container resource requests and limits for teams-app. [Reference][resources].
  resources:
    limits: {}
    #   cpu: 1
    #   memory: 2Gi
    requests: {}
    #   cpu: 500m
    #   memory: 1Gi
  service:
    # -- Service annotations for teams-app. [Reference][annotations].
    annotations: {}
    # -- Service container port for teams-app.
    containerPort: 3000
    liveness:
      # -- Number of seconds to wait before performing the liveness probe for teams-app. [Reference][probes].
      initialDelaySeconds: 15
    # -- Service name.
    name: teams-app
    # -- (int) Service nodePort set only when `teamsAppSettings.service.type: NodePort` for teams-app.
    nodePort:
    # -- Service port.
    port: 80
    readiness:
      # -- Number of seconds to wait before performing the readiness probe for teams-app. [Reference][probes].
      initialDelaySeconds: 15
    # TODO: Kevin/topher - Consider changing name from `shortname` to `portName`.
    # -- Port name (maximum length is 15 characters) for teams-app. [Reference][ports].
    shortname: teams-app
    # -- Service type for teams-app. [Reference][service-type].
    type: ClusterIP

  # -- Affinity and anti-affinity for teams-app. [Reference][affinity].
  affinity: {}
  # -- nodeSelector for teams-app. [Reference][node-selector].
  nodeSelector: {}
  # -- Annotations for teams-app pods. [Reference][annotations].
  podAnnotations: {}
  # -- Pod-level security attributes and common container settings for teams-app. [Reference][security-context].
  podSecurityContext: {}
  # TODO: Consider renaming `securityContext` to `containerSecurityContext`
  # -- Container security configuration for teams-app. [Reference][container-security-context].
  securityContext: {}
  # -- Allow the k8s scheduler to schedule teams-app pods with matching taints. [Reference][taints-and-tolerations].
  tolerations: []
  # -- Volume mounts for teams-app pods. [Reference][volumes].
  volumeMounts: []
  # -- Volumes for teams-app pods. [Reference][volumes].
  volumes: []
