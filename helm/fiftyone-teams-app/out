---
# Source: fiftyone-teams-app/templates/delegated-operator-instance-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: teams-do
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-do
    app.kubernetes.io/instance: release-name
spec:
  minAvailable: 40%
  selector:
    matchLabels:
      app.kubernetes.io/name: teams-do
      app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/delegated-operator-instance-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: teams-do-twp
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-do-twp
    app.kubernetes.io/instance: release-name
spec:
  minAvailable: 10%
  selector:
    matchLabels:
      app.kubernetes.io/name: teams-do-twp
      app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fiftyone-teams
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fiftyone-teams
    app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: fiftyone-teams-secrets
  namespace: fiftyone-teams
type: Opaque
data:
  cookieSecret:
  encryptionKey:
  fiftyoneAuthSecret:
  fiftyoneDatabaseName:
  mongodbConnectionString:
---
# Source: fiftyone-teams-app/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: teams-api
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-api
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: teams-api
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: teams-api
    app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/app-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fiftyone-app
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fiftyone-app
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: fiftyone-app
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: fiftyone-app
    app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/cas-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: teams-cas
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-cas
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: teams-cas
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: teams-cas
    app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/teams-app-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: teams-app
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fiftyone-teams-app
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: teams-app
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: fiftyone-teams-app
    app.kubernetes.io/instance: release-name
---
# Source: fiftyone-teams-app/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teams-api
  namespace: fiftyone-teams
  labels:
    app: teams-api
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-api
    app.kubernetes.io/instance: release-name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teams-api
      app.kubernetes.io/name: teams-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: teams-api
        app.kubernetes.io/name: teams-api
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: fiftyone-teams
      securityContext:
        {}
      containers:
        - name: teams-api
          securityContext:
            {}
          image: "voxel51/fiftyone-teams-api:v2.8.0"
          imagePullPolicy: Always
          env:
            - name: CAS_BASE_URL
              value: "http://teams-cas:80/cas/api"
            - name: FIFTYONE_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneAuthSecret
            - name: FIFTYONE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneDatabaseName
            - name: FIFTYONE_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: mongodbConnectionString
            - name: FIFTYONE_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: encryptionKey
            - name: MONGO_DEFAULT_DB
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneDatabaseName
            - name: FIFTYONE_ENV
              value: "production"
            - name: FIFTYONE_INTERNAL_SERVICE
              value: "true"
            - name: GRAPHQL_DEFAULT_LIMIT
              value: "10"
            - name: LOGGING_LEVEL
              value: "INFO"
          ports:
            - name: teams-api
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/
              port: teams-api
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/
              port: teams-api
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /health/
              port: teams-api
            failureThreshold: 10
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
      initContainers:
        - name: init-cas
          image: docker.io/busybox:stable-glibc
          command:
            - 'sh'
            - '-c'
            - "until wget -qO /dev/null teams-cas.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/cas/api; do echo waiting for cas; sleep 2; done"
---
# Source: fiftyone-teams-app/templates/app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fiftyone-app
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fiftyone-app
    app.kubernetes.io/instance: release-name
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: fiftyone-app
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fiftyone-app
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: fiftyone-teams
      securityContext:
        {}
      containers:
        - name: fiftyone-app
          securityContext:
            {}
          image: "voxel51/fiftyone-app:v2.8.0"
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "http://teams-api:80"
            - name: FIFTYONE_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneAuthSecret
            - name: FIFTYONE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneDatabaseName
            - name: FIFTYONE_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: mongodbConnectionString
            - name: FIFTYONE_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: encryptionKey
            - name: FIFTYONE_DATABASE_ADMIN
              value: "false"
            - name: FIFTYONE_INTERNAL_SERVICE
              value: "true"
            - name: FIFTYONE_MEDIA_CACHE_APP_IMAGES
              value: "false"
            - name: FIFTYONE_MEDIA_CACHE_SIZE_BYTES
              value: "-1"
            - name: FIFTYONE_SIGNED_URL_EXPIRATION
              value: "24"
          ports:
            - name: fiftyone-app
              containerPort: 5151
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: fiftyone-app
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: fiftyone-app
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: fiftyone-app
            failureThreshold: 5
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
      initContainers:
        - name: init-cas
          image: docker.io/busybox:stable-glibc
          command:
            - 'sh'
            - '-c'
            - "until wget -qO /dev/null teams-cas.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/cas/api; do echo waiting for cas; sleep 2; done"
---
# Source: fiftyone-teams-app/templates/cas-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teams-cas
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-cas
    app.kubernetes.io/instance: release-name
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: teams-cas
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: teams-cas
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: fiftyone-teams
      securityContext:
        {}
      containers:
        - name: teams-cas
          securityContext:
            {}
          image: "voxel51/fiftyone-teams-cas:v2.8.0"
          imagePullPolicy: Always
          env:
            - name: CAS_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: mongodbConnectionString
            - name: CAS_URL
              value: "https://"
            - name: FIFTYONE_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneAuthSecret
            - name: FIFTYONE_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: encryptionKey
            - name: LICENSE_KEY_FILE_PATHS
              value: "/opt/fiftyone/licenses/fiftyone-license"
            - name: NEXTAUTH_URL
              value: "https:///cas/api/auth"
            - name: TEAMS_API_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneDatabaseName
            - name: TEAMS_API_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: mongodbConnectionString
            - name: CAS_DATABASE_NAME
              value: "cas"
            - name: CAS_DEFAULT_USER_ROLE
              value: "GUEST"
            - name: CAS_MONGODB_URI_KEY
              value: "mongodbConnectionString"
            - name: DEBUG
              value: "cas:*,-cas:*:debug"
            - name: FIFTYONE_AUTH_MODE
              value: "legacy"
          ports:
            - name: teams-cas
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /cas/api
              port: teams-cas
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /cas/api
              port: teams-cas
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /cas/api
              port: teams-cas
            failureThreshold: 5
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: fiftyone-license
              mountPath: /opt/fiftyone/licenses
              readOnly: true
      volumes:
        - name: fiftyone-license
          secret:
            secretName: fiftyone-license
            items:
              - key: license
                path: fiftyone-license
---
# Source: fiftyone-teams-app/templates/delegated-operator-instance-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teams-do
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-do
    app.kubernetes.io/instance: release-name
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: teams-do
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: teams-do
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: fiftyone-teams
      securityContext:
        {}
      containers:
        - name: teams-do
          command: ["fiftyone"]
          args:
            - delegated
            - launch
            - -t
            - remote
            - -n
            - teams-do
            - -d
            - "Long running operations delegated to teams-do"
          securityContext:
            {}
          image: "voxel51/fiftyone-teams-cv-full:v2.8.0"
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "http://teams-api:80"
            - name: FIFTYONE_DATABASE_ADMIN
              value: "false"
            - name: FIFTYONE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneDatabaseName
            - name: FIFTYONE_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: mongodbConnectionString
            - name: FIFTYONE_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: encryptionKey
            - name: FIFTYONE_DELEGATED_OPERATION_LOG_PATH
              value: ""
            - name: FIFTYONE_INTERNAL_SERVICE
              value: "true"
            - name: FIFTYONE_MEDIA_CACHE_SIZE_BYTES
              value: "-1"
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - fiftyone delegated list --limit 1 -o liveness
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - fiftyone delegated list --limit 1 -o readiness
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - fiftyone delegated list --limit 1 -o startup
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
---
# Source: fiftyone-teams-app/templates/delegated-operator-instance-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teams-do-twp
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: teams-do-twp
    app.kubernetes.io/instance: release-name
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: teams-do-twp
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: teams-do-twp
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: fiftyone-teams
      securityContext:
        {}
      containers:
        - name: teams-do-twp
          command: ["fiftyone"]
          args:
            - delegated
            - launch
            - -t
            - remote
            - -n
            - teams-do-twp
            - -d
            - "Long running operations delegated to teams-do-twp"
          securityContext:
            {}
          image: "voxel51/fiftyone-teams-cv-full:v2.8.0"
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "http://teams-api:80"
            - name: FIFTYONE_DATABASE_ADMIN
              value: "false"
            - name: FIFTYONE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneDatabaseName
            - name: FIFTYONE_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: mongodbConnectionString
            - name: FIFTYONE_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: encryptionKey
            - name: FIFTYONE_DELEGATED_OPERATION_LOG_PATH
              value: ""
            - name: FIFTYONE_INTERNAL_SERVICE
              value: "true"
            - name: FIFTYONE_MEDIA_CACHE_SIZE_BYTES
              value: "-1"
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - fiftyone delegated list --limit 1 -o liveness
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - fiftyone delegated list --limit 1 -o readiness
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - fiftyone delegated list --limit 1 -o startup
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
---
# Source: fiftyone-teams-app/templates/teams-app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teams-app
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fiftyone-teams-app
    app.kubernetes.io/instance: release-name
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: fiftyone-teams-app
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fiftyone-teams-app
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: fiftyone-teams
      securityContext:
        {}
      containers:
        - name: teams-app
          securityContext:
            {}
          image: "voxel51/fiftyone-teams-app:v2.8.0"
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "http://teams-api:80"
            - name: FIFTYONE_API_URI
              value: https://
            - name: FIFTYONE_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: fiftyone-teams-secrets
                  key: fiftyoneAuthSecret
            - name: FIFTYONE_SERVER_ADDRESS
              value: ""
            - name: FIFTYONE_SERVER_PATH_PREFIX
              value: "/api/proxy/fiftyone-teams"
            - name: FIFTYONE_TEAMS_PROXY_URL
              value: "http://fiftyone-app:80"
            - name: FIFTYONE_TEAMS_PLUGIN_URL
              value: "http://fiftyone-app:80"
            - name: APP_USE_HTTPS
              value: "true"
            - name: FIFTYONE_APP_ALLOW_MEDIA_EXPORT
              value: "true"
            - name: FIFTYONE_APP_ANONYMOUS_ANALYTICS_ENABLED
              value: "true"
            - name: FIFTYONE_APP_DEFAULT_QUERY_PERFORMANCE
              value: "true"
            - name: FIFTYONE_APP_ENABLE_QUERY_PERFORMANCE
              value: "true"
            - name: FIFTYONE_APP_TEAMS_SDK_RECOMMENDED_VERSION
              value: "2.8.0"
            - name: FIFTYONE_APP_THEME
              value: "dark"
            - name: RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED
              value: "false"
          ports:
            - name: teams-app
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/hello
              port: teams-app
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/hello
              port: teams-app
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /api/hello
              port: teams-app
            failureThreshold: 5
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
      initContainers:
        - name: init-cas
          image: docker.io/busybox:stable-glibc
          command:
            - 'sh'
            - '-c'
            - "until wget -qO /dev/null teams-cas.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/cas/api; do echo waiting for cas; sleep 2; done"
---
# Source: fiftyone-teams-app/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-fiftyone-teams-app
  namespace: fiftyone-teams
  labels:
    helm.sh/chart: fiftyone-teams-app-2.8.0
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name-fiftyone-teams-app
    app.kubernetes.io/instance: release-name
spec:
  defaultBackend:
    service:
      name: teams-app
      port:
        number: 80
  tls:
    - hosts:
        - ""
      secretName: fiftyone-teams-tls-secret
  rules:
    - host: ""
      http:
        paths:
          - path: /cas
            pathType: Prefix
            backend:
              service:
                name: teams-cas
                port:
                  number: 80
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: teams-app
                port:
                  number: 80
