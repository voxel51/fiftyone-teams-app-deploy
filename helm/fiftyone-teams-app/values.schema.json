{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "properties": {
        "apiSettings": {
            "type": "object",
            "properties": {
                "affinity": {
                    "description": "Affinity and anti-affinity for `teams-api`. [Reference][affinity].",
                    "type": "object"
                },
                "deploymentAnnotations": {
                    "description": "Annotations for the `teams-api` deployment. [Reference][annotations].",
                    "type": "object"
                },
                "dnsName": {
                    "description": "Controls whether `teams-api` is added to the chart's ingress. When an empty string, a rule for `teams-api` is not added to the chart managed ingress. When not an empty string, becomes the value to the `host` in the ingress' rule and set `ingress.api` too.",
                    "type": "string"
                },
                "env": {
                    "type": "object",
                    "properties": {
                        "FIFTYONE_ENV": {
                            "description": "Controls FiftyOne GraphQL verbosity. When \"production\", debug mode is disabled and the default logging level is \"INFO\". When \"development\", debug mode is enabled and the default logging level is \"DEBUG\". Can be overridden by setting `apiSettings.env.LOGGING_LEVEL`.",
                            "type": "string"
                        },
                        "FIFTYONE_INTERNAL_SERVICE": {
                            "description": "Whether the SDK is running in an internal service context. When running in FiftyOne Enterprise, set to `true`.",
                            "type": "boolean"
                        },
                        "GRAPHQL_DEFAULT_LIMIT": {
                            "description": "Default number of returned items when listing in GraphQL queries. Can be overridden in the request.",
                            "type": "integer"
                        },
                        "LOGGING_LEVEL": {
                            "description": "Logging level. Overrides the value of `FIFTYONE_ENV`. Can be one of \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", or \"CRITICAL\".",
                            "type": "string"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].",
                            "type": "string"
                        },
                        "repository": {
                            "description": "Container image for the `teams-api`.",
                            "type": "string"
                        },
                        "tag": {
                            "description": "Image tag for `teams-api`. Defaults to the chart version.",
                            "type": "string"
                        }
                    }
                },
                "initContainers": {
                    "type": "object",
                    "properties": {
                        "containerSecurityContext": {
                            "description": "Container security configuration for `teams-api` `initContainers`. [Reference][container-security-context].",
                            "type": "object",
                            "properties": {
                                "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "runAsNonRoot": {
                                    "type": "boolean"
                                },
                                "runAsUser": {
                                    "type": "integer"
                                }
                            }
                        },
                        "enabled": {
                            "description": "Whether to enable init containers for `teams-api`. [Reference][init-containers].",
                            "type": "boolean"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "description": "Init container images repositories for `teams-api`. [Reference][init-containers].",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "Init container images tags for `teams-api`. [Reference][init-containers].",
                                    "type": "string"
                                }
                            }
                        },
                        "resources": {
                            "description": "Container resource requests and limits for the `teams-api` `initContainers`. [Reference][resources].",
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the `teams-api` related objects. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "liveness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the liveness probe for the `teams-api`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the liveness probe for `teams-api`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Number of seconds after which the liveness probe times out for the `teams-api`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "nodeSelector": {
                    "description": "nodeSelector for `teams-api`. [Reference][node-selector].",
                    "type": "object"
                },
                "podAnnotations": {
                    "description": "Annotations for pods for `teams-api`. [Reference][annotations].",
                    "type": "object"
                },
                "podDisruptionBudget": {
                    "description": "Pod Disruption Budget for pods for `teams-api`. [Reference][pod-disruption-budget].",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a pod disruption budget is enabled for `teams-api`.",
                            "type": "boolean"
                        },
                        "minAvailable": {
                            "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                            "type": "integer"
                        }
                    }
                },
                "podSecurityContext": {
                    "description": "Pod-level security attributes and common container settings for `teams-api`. [Reference][security-context].",
                    "type": "object"
                },
                "readiness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the readiness probe for the `teams-api`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the readiness probe for `teams-api`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Number of seconds after which the readiness probe times out for the `teams-api`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "replicaCount": {
                    "description": "Number of pods in the `teams-api` deployment's ReplicaSet. When \u003e 1, you must also configure volumes, volumeMounts and set `apiSettings.env.FIFTYONE_SHARED_ROOT_DIR`. For more information see [the documentation][configure-ha-teams-api].",
                    "type": "integer"
                },
                "resources": {
                    "description": "Container resource requests and limits for `teams-api`. [Reference][resources].",
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object"
                        },
                        "requests": {
                            "type": "object"
                        }
                    }
                },
                "secretEnv": {
                    "description": "Secret variables to be passed to the `teams-api` containers.",
                    "type": "object"
                },
                "securityContext": {
                    "description": "Container security configuration for `teams-api`. [Reference][container-security-context].",
                    "type": "object"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "description": "Service annotations for `teams-api`. [Reference][annotations].",
                            "type": "object"
                        },
                        "containerPort": {
                            "description": "Service container port for `teams-api`.",
                            "type": "integer"
                        },
                        "name": {
                            "description": "Service name.",
                            "type": "string"
                        },
                        "nodePort": {
                            "description": "Service nodePort set only when `apiSettings.service.type: NodePort` for `teams-api`.",
                            "type": "null"
                        },
                        "port": {
                            "description": "Service port for `teams-api`.",
                            "type": "integer"
                        },
                        "shortname": {
                            "description": "Port name (maximum length is 15 characters) for `teams-api`. [Reference][ports].",
                            "type": "string"
                        },
                        "type": {
                            "description": "Service type for `teams-api`. [Reference][service-type].",
                            "type": "string"
                        }
                    }
                },
                "startup": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the startup probe for the `teams-api`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the startup probe for `teams-api`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Number of seconds after which the startup probe times out for the `teams-api`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "tolerations": {
                    "description": "Allow the k8s scheduler to schedule pods with matching taints for `teams-api`. [Reference][taints-and-tolerations].",
                    "type": "array"
                },
                "topologySpreadConstraints": {
                    "description": "Control how pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `teams-api` deployment. [Reference][topology-spread-constraints].",
                    "type": "array"
                },
                "updateStrategy": {
                    "description": "Control how `teams-api` pods are redeployed during an upgrade. [Reference][upgrade-strategies]",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "volumeMounts": {
                    "description": "Volume mounts for `teams-api`. [Reference][volumes].",
                    "type": "array"
                },
                "volumes": {
                    "description": "Volumes for `teams-api`. [Reference][volumes].",
                    "type": "array"
                }
            }
        },
        "appSettings": {
            "type": "object",
            "properties": {
                "affinity": {
                    "description": "Affinity and anti-affinity for `fiftyone-app`. [Reference][affinity].",
                    "type": "object"
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Controls horizontal pod autoscaling for `fiftyone-app`. [Reference][autoscaling].",
                            "type": "boolean"
                        },
                        "maxReplicas": {
                            "description": "Maximum replicas for horizontal pod autoscaling for `fiftyone-app`.",
                            "type": "integer"
                        },
                        "minReplicas": {
                            "description": "Minimum Replicas for horizontal pod autoscaling for `fiftyone-app`.",
                            "type": "integer"
                        },
                        "targetCPUUtilizationPercentage": {
                            "description": "Percent CPU utilization for autoscaling for `fiftyone-app`.",
                            "type": "integer"
                        },
                        "targetMemoryUtilizationPercentage": {
                            "description": "Percent memory utilization for autoscaling for `fiftyone-app`.",
                            "type": "integer"
                        }
                    }
                },
                "deploymentAnnotations": {
                    "description": "Annotations for the `fiftyone-app` deployment. [Reference][annotations].",
                    "type": "object"
                },
                "env": {
                    "type": "object",
                    "properties": {
                        "FIFTYONE_DATABASE_ADMIN": {
                            "description": "Controls whether the client is allowed to trigger database migrations. [Reference][fiftyone-config].",
                            "type": "boolean"
                        },
                        "FIFTYONE_INTERNAL_SERVICE": {
                            "description": "Whether the SDK is running in an internal service context. When running in FiftyOne Enterprise, set to `true`.",
                            "type": "boolean"
                        },
                        "FIFTYONE_MEDIA_CACHE_APP_IMAGES": {
                            "description": "Controls whether cloud media images will be downloaded and added to the local cache upon viewing media in the app.",
                            "type": "boolean"
                        },
                        "FIFTYONE_MEDIA_CACHE_SIZE_BYTES": {
                            "description": "Set the media cache size (in bytes) for the local FiftyOne App processes. When not set, the app's default value is 32 GiB. `-1` disables the media cache garbage collection (and cache size is unlimited).",
                            "type": "integer"
                        },
                        "FIFTYONE_SIGNED_URL_EXPIRATION": {
                            "description": "Set the time-to-live for signed URLs generated by the application in hours",
                            "type": "integer"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].",
                            "type": "string"
                        },
                        "repository": {
                            "description": "Container image for `fiftyone-app`.",
                            "type": "string"
                        },
                        "tag": {
                            "description": "Image tag for `fiftyone-app`. Defaults to the chart version.",
                            "type": "string"
                        }
                    }
                },
                "initContainers": {
                    "type": "object",
                    "properties": {
                        "containerSecurityContext": {
                            "description": "Container security configuration for `fiftyone-app` `initContainers`. [Reference][container-security-context].",
                            "type": "object",
                            "properties": {
                                "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "runAsNonRoot": {
                                    "type": "boolean"
                                },
                                "runAsUser": {
                                    "type": "integer"
                                }
                            }
                        },
                        "enabled": {
                            "description": "Whether to enable init containers for `fiftyone-app`. [Reference][init-containers].",
                            "type": "boolean"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "description": "Init container images repositories for `fiftyone-app`. [Reference][init-containers].",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "Init container images tags for `fiftyone-app`. [Reference][init-containers].",
                                    "type": "string"
                                }
                            }
                        },
                        "resources": {
                            "description": "Container resource requests and limits for the `fiftyone-app` `initContainers`. [Reference][resources].",
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the `fiftyone-app` related objects. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "liveness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the liveness probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the liveness probe for `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the liveness probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "nodeSelector": {
                    "description": "nodeSelector for `fiftyone-app`. [Reference][node-selector].",
                    "type": "object"
                },
                "podAnnotations": {
                    "description": "Annotations for pods for `fiftyone-app`. [Reference][annotations].",
                    "type": "object"
                },
                "podDisruptionBudget": {
                    "description": "Pod Disruption Budget for pods for `fiftyone-app`. [Reference][pod-disruption-budget].",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a pod disruption budget is enabled for `fiftyone-app`.",
                            "type": "boolean"
                        },
                        "minAvailable": {
                            "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                            "type": "integer"
                        }
                    }
                },
                "podSecurityContext": {
                    "description": "Pod-level security attributes and common container settings for `fiftyone-app`. [Reference][security-context].",
                    "type": "object"
                },
                "readiness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the readiness probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the readiness probe for `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the readiness probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "replicaCount": {
                    "description": "Number of pods in the `fiftyone-app` deployment's ReplicaSet. Ignored when `appSettings.autoscaling.enabled: true`. [Reference][deployment].",
                    "type": "integer"
                },
                "resources": {
                    "description": "Container resource requests and limits for `fiftyone-app`. [Reference][resources].",
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object"
                        },
                        "requests": {
                            "type": "object"
                        }
                    }
                },
                "secretEnv": {
                    "description": "Secret variables to be passed to the `fiftyone-app` containers.",
                    "type": "object"
                },
                "securityContext": {
                    "description": "Container security configuration for `fiftyone-app`. [Reference][container-security-context].",
                    "type": "object"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "description": "Service annotations for `fiftyone-app`. [Reference][annotations].",
                            "type": "object"
                        },
                        "containerPort": {
                            "description": "Service container port for `fiftyone-app`.",
                            "type": "integer"
                        },
                        "name": {
                            "description": "Service name.",
                            "type": "string"
                        },
                        "nodePort": {
                            "description": "Service nodePort set only when `appSettings.service.type: NodePort` for `fiftyone-app`.",
                            "type": "null"
                        },
                        "port": {
                            "description": "Service port.",
                            "type": "integer"
                        },
                        "shortname": {
                            "description": "Port name (maximum length is 15 characters) for `fiftyone-app`. [Reference][ports].",
                            "type": "string"
                        },
                        "type": {
                            "description": "Service type for `fiftyone-app`. [Reference][service-type].",
                            "type": "string"
                        }
                    }
                },
                "startup": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the startup probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the startup probe for `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the startup probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "tolerations": {
                    "description": "Allow the k8s scheduler to schedule `fiftyone-app` pods with matching taints. [Reference][taints-and-tolerations].",
                    "type": "array"
                },
                "topologySpreadConstraints": {
                    "description": "Control how Pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `fiftyone-app` deployment. [Reference][topology-spread-constraints].",
                    "type": "array"
                },
                "updateStrategy": {
                    "description": "Control how `fiftyone-app` pods are redeployed during an upgrade. [Reference][upgrade-strategies]",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "volumeMounts": {
                    "description": "Volume mounts for `fiftyone-app`. [Reference][volumes].",
                    "type": "array"
                },
                "volumes": {
                    "description": "Volumes for `fiftyone-app`. [Reference][volumes].",
                    "type": "array"
                }
            }
        },
        "casSettings": {
            "type": "object",
            "properties": {
                "affinity": {
                    "description": "Affinity and anti-affinity for `teams-cas`. [Reference][affinity].",
                    "type": "object"
                },
                "deploymentAnnotations": {
                    "description": "Annotations for the `teams-cas` deployment. [Reference][annotations].",
                    "type": "object"
                },
                "enable_invitations": {
                    "description": "Allow ADMINs to invite users by email NOTE: This is currently not supported when `FIFTYONE_AUTH_MODE: internal`",
                    "type": "boolean"
                },
                "env": {
                    "type": "object",
                    "properties": {
                        "CAS_DATABASE_NAME": {
                            "description": "Provide the name for the CAS database. When multiple deployments use the same database instance, set `CAS_DATABASE_NAME` to a unique value for each deployment.",
                            "type": "string"
                        },
                        "CAS_DEFAULT_USER_ROLE": {
                            "description": "Set the default user role for new users One of `GUEST`, `COLLABORATOR`, `MEMBER`, `ADMIN`",
                            "type": "string"
                        },
                        "CAS_MONGODB_URI_KEY": {
                            "description": "The key from `secret.fiftyone.name` that contains the CAS MongoDB Connection String.",
                            "type": "string"
                        },
                        "DEBUG": {
                            "description": "Set the log level for CAS examples: `DEBUG: cas:*` - shows all CAS logs `DEBUG: cas:*:info` - shows all CAS INFO logs `DEBUG: cas:*,-cas:*:debug` - shows all CAS logs except DEBUG logs",
                            "type": "string"
                        },
                        "FIFTYONE_AUTH_MODE": {
                            "description": "Configure Authentication Mode. One of `legacy` or `internal`",
                            "type": "string"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].",
                            "type": "string"
                        },
                        "repository": {
                            "description": "Container image for `teams-cas`.",
                            "type": "string"
                        },
                        "tag": {
                            "description": "Image tag for `teams-cas`. Defaults to the chart version.",
                            "type": "string"
                        }
                    }
                },
                "initContainers": {
                    "type": "object",
                    "properties": {
                        "containerSecurityContext": {
                            "description": "Container security configuration for `teams-cas` `initContainers`. [Reference][container-security-context].",
                            "type": "object",
                            "properties": {
                                "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "runAsNonRoot": {
                                    "type": "boolean"
                                },
                                "runAsUser": {
                                    "type": "integer"
                                }
                            }
                        },
                        "enabled": {
                            "description": "Whether to enable init containers for `teams-cas`. [Reference][init-containers].",
                            "type": "boolean"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "description": "Init container images repositories for `teams-cas`. [Reference][init-containers].",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "Init container images tags for `teams-cas`. [Reference][init-containers].",
                                    "type": "string"
                                }
                            }
                        },
                        "resources": {
                            "description": "Container resource requests and limits for the `teams-cas` `initContainers`. [Reference][resources].",
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the `teams-cas` related objects. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "liveness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the liveness probe for the `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the liveness probe for `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the liveness probe for the `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "nodeSelector": {
                    "description": "nodeSelector for `teams-cas`. [Reference][node-selector].",
                    "type": "object"
                },
                "podAnnotations": {
                    "description": "Annotations for pods for `teams-cas`. [Reference][annotations].",
                    "type": "object"
                },
                "podDisruptionBudget": {
                    "description": "Pod Disruption Budget for pods for `teams-cas`. [Reference][pod-disruption-budget].",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a pod disruption budget is enabled for `teams-cas`.",
                            "type": "boolean"
                        },
                        "minAvailable": {
                            "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                            "type": "integer"
                        }
                    }
                },
                "podSecurityContext": {
                    "description": "Pod-level security attributes and common container settings for `teams-cas`. [Reference][security-context].",
                    "type": "object"
                },
                "readiness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the readiness probe for the `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the readiness probe for `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the readiness probe for the `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "replicaCount": {
                    "description": "Number of pods in the `teams-cas` deployment's ReplicaSet. [Reference][deployment].",
                    "type": "integer"
                },
                "resources": {
                    "description": "Container resource requests and limits for `teams-cas`. [Reference][resources].",
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object"
                        },
                        "requests": {
                            "type": "object"
                        }
                    }
                },
                "secretEnv": {
                    "description": "Secret variables to be passed to the `teams-cas` containers.",
                    "type": "object"
                },
                "securityContext": {
                    "description": "Container security configuration for `teams-cas`. [Reference][container-security-context].",
                    "type": "object"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "description": "Service annotations for `teams-cas`. [Reference][annotations].",
                            "type": "object"
                        },
                        "containerPort": {
                            "description": "Service container port for `teams-cas`.",
                            "type": "integer"
                        },
                        "name": {
                            "description": "Service name.",
                            "type": "string"
                        },
                        "nodePort": {
                            "description": "Service nodePort set only when `casSettings.service.type: NodePort` for `teams-cas`.",
                            "type": "null"
                        },
                        "port": {
                            "description": "Service port.",
                            "type": "integer"
                        },
                        "shortname": {
                            "description": "Port name (maximum length is 15 characters) for `teams-cas`. [Reference][ports].",
                            "type": "string"
                        },
                        "type": {
                            "description": "Service type for `teams-cas`. [Reference][service-type].",
                            "type": "string"
                        }
                    }
                },
                "startup": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the startup probe for the `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the startup probe for `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the startup probe for the `teams-cas`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "tolerations": {
                    "description": "Allow the k8s scheduler to schedule `teams-cas` pods with matching taints. [Reference][taints-and-tolerations].",
                    "type": "array"
                },
                "topologySpreadConstraints": {
                    "description": "Control how Pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `teams-cas` deployment. [Reference][topology-spread-constraints].",
                    "type": "array"
                },
                "updateStrategy": {
                    "description": "Control how `teams-cas` pods are redeployed during an upgrade. [Reference][upgrade-strategies]",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "volumeMounts": {
                    "description": "Volume mounts for `teams-cas`. [Reference][volumes].",
                    "type": "array"
                },
                "volumes": {
                    "description": "Volumes for `teams-cas`. [Reference][volumes].",
                    "type": "array"
                }
            }
        },
        "delegatedOperatorDeployments": {
            "type": "object",
            "properties": {
                "deployments": {
                    "description": "Additional deployments to configure. Each template will use .Values.delegatedOperatorDeployments.template as a base. Each template value may be overridden. Maps/dictionaries will be merged key-wise, with the deployment instance taking precedence. List values will not be merged, but be overridden completely by the deployment instance.",
                    "type": "object"
                },
                "template": {
                    "description": "A common template applied to all deployments. Each deployment can then override individual fields as needed by the operator.",
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "description": "Affinity and anti-affinity for `delegated-operator-executor`. [Reference][affinity].",
                            "type": "object"
                        },
                        "deploymentAnnotations": {
                            "description": "Annotations for the `teams-do` deployment. [Reference][annotations].",
                            "type": "object"
                        },
                        "description": {
                            "description": "A description for the delegated operator instance. This is unused in the template context. Each operator should either set their own description or, optionally, use the default. If unset at the operator context, it will be defaulted to `Long running operations delegated to $name` where `$name` is the name of the Deployment object.",
                            "type": "string"
                        },
                        "env": {
                            "type": "object",
                            "properties": {
                                "FIFTYONE_DELEGATED_OPERATION_LOG_PATH": {
                                    "description": "Full path to a network-mounted file system or a cloud storage path to use for storing logs generated by delegated operation runs, one file per job. The default `\"\"` means log upload is disabled.",
                                    "type": "string"
                                },
                                "FIFTYONE_INTERNAL_SERVICE": {
                                    "description": "Whether the SDK is running in an internal service context. When running in FiftyOne Enterprise, set to `true`.",
                                    "type": "boolean"
                                },
                                "FIFTYONE_MEDIA_CACHE_SIZE_BYTES": {
                                    "description": "Set the media cache size (in bytes) for the local FiftyOne Delegated Operator Executor processes. When not set, the app's default value is 32 GiB. `-1` disables the media cache garbage collection (and cache size is unlimited).",
                                    "type": "integer"
                                }
                            }
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "pullPolicy": {
                                    "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].",
                                    "type": "string"
                                },
                                "repository": {
                                    "description": "Container image for `delegated-operator-executor`.",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "Image tag for `delegated-operator-executor`. Defaults to the chart version.",
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "description": "Additional labels for the `delegated-operator-executor` related objects. [Reference][labels-and-selectors].",
                            "type": "object"
                        },
                        "liveness": {
                            "type": "object",
                            "properties": {
                                "failureThreshold": {
                                    "description": "Number of times to retry the liveness probe for the `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                },
                                "periodSeconds": {
                                    "description": "How often (in seconds) to perform the liveness probe for `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                },
                                "timeoutSeconds": {
                                    "description": "Timeout for the liveness probe for the `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                }
                            }
                        },
                        "nodeSelector": {
                            "description": "nodeSelector for `delegated-operator-executor`. [Reference][node-selector].",
                            "type": "object"
                        },
                        "podAnnotations": {
                            "description": "Annotations for delegated-operator-executor pods. [Reference][annotations].",
                            "type": "object"
                        },
                        "podDisruptionBudget": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "description": "Whether a pod disruption budget is enabled for `teams-plugins`.",
                                    "type": "boolean"
                                },
                                "minAvailable": {
                                    "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                                    "type": "integer"
                                }
                            }
                        },
                        "podSecurityContext": {
                            "description": "Pod-level security attributes and common container settings for `delegated-operator-executor`. [Reference][security-context].",
                            "type": "object"
                        },
                        "readiness": {
                            "type": "object",
                            "properties": {
                                "failureThreshold": {
                                    "description": "Number of times to retry the readiness probe for the `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                },
                                "periodSeconds": {
                                    "description": "How often (in seconds) to perform the readiness probe for `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                },
                                "timeoutSeconds": {
                                    "description": "Timeout for the readiness probe for the `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                }
                            }
                        },
                        "replicaCount": {
                            "description": "Number of pods in the delegated-operator-executor deployment's ReplicaSet. This should not exceed the value set in the deployment's license file for max concurrent delegated operators, which defaults to 3.",
                            "type": "integer"
                        },
                        "resources": {
                            "description": "Container resource requests and limits for `delegated-operator-executor`. [Reference][resources].",
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object"
                                },
                                "requests": {
                                    "type": "object"
                                }
                            }
                        },
                        "secretEnv": {
                            "description": "Secret variables to be passed to the delegated-operator-executor containers.",
                            "type": "object"
                        },
                        "securityContext": {
                            "description": "Container security configuration for `delegated-operator-executor`. [Reference][container-security-context].",
                            "type": "object"
                        },
                        "startup": {
                            "type": "object",
                            "properties": {
                                "failureThreshold": {
                                    "description": "Number of times to retry the startup probe for the `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                },
                                "periodSeconds": {
                                    "description": "How often (in seconds) to perform the startup probe for `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                },
                                "timeoutSeconds": {
                                    "description": "Timeout for the startup probe for the `teams-do`. [Reference][probes].",
                                    "type": "integer"
                                }
                            }
                        },
                        "tolerations": {
                            "description": "Allow the k8s scheduler to schedule delegated-operator-executor pods with matching taints. [Reference][taints-and-tolerations].",
                            "type": "array"
                        },
                        "topologySpreadConstraints": {
                            "description": "Control how Pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `teams-do` deployment(s). [Reference][topology-spread-constraints].",
                            "type": "array"
                        },
                        "updateStrategy": {
                            "description": "Control how `teams-do` pods are redeployed during an upgrade. [Reference][upgrade-strategies]",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                }
                            }
                        },
                        "volumeMounts": {
                            "description": "Volume mounts for delegated-operator-executor pods. [Reference][volumes].",
                            "type": "array"
                        },
                        "volumes": {
                            "description": "Volumes for `delegated-operator-executor`. [Reference][volumes].",
                            "type": "array"
                        }
                    }
                }
            }
        },
        "delegatedOperatorExecutorSettings": {
            "type": "object",
            "properties": {
                "affinity": {
                    "description": "Affinity and anti-affinity for `delegated-operator-executor`. [Reference][affinity].",
                    "type": "object"
                },
                "deploymentAnnotations": {
                    "description": "Annotations for the `teams-do` deployment. [Reference][annotations].",
                    "type": "object"
                },
                "enabled": {
                    "description": "Controls whether to create a dedicated `teams-do` deployment. Disabled by default, meaning delegated operations will not be executed without an external executor system.",
                    "type": "boolean"
                },
                "env": {
                    "type": "object",
                    "properties": {
                        "FIFTYONE_DELEGATED_OPERATION_LOG_PATH": {
                            "description": "Full path to a network-mounted file system or a cloud storage path to use for storing logs generated by delegated operation runs, one file per job. The default `\"\"` means log upload is disabled.",
                            "type": "string"
                        },
                        "FIFTYONE_INTERNAL_SERVICE": {
                            "description": "Whether the SDK is running in an internal service context. When running in FiftyOne Enterprise, set to `true`.",
                            "type": "boolean"
                        },
                        "FIFTYONE_MEDIA_CACHE_SIZE_BYTES": {
                            "description": "Set the media cache size (in bytes) for the local FiftyOne Delegated Operator Executor processes. The default value is 32 GiB. `-1` is disabled.",
                            "type": "integer"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].",
                            "type": "string"
                        },
                        "repository": {
                            "description": "Container image for `delegated-operator-executor`.",
                            "type": "string"
                        },
                        "tag": {
                            "description": "Image tag for `delegated-operator-executor`. Defaults to the chart version.",
                            "type": "string"
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the `delegated-operator-executor` related objects. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "liveness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the liveness probe for the `teams-do`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the liveness probe for `teams-do`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the liveness probe for the `teams-do`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "name": {
                    "description": "Deployment name",
                    "type": "string"
                },
                "nodeSelector": {
                    "description": "nodeSelector for `delegated-operator-executor`. [Reference][node-selector].",
                    "type": "object"
                },
                "podAnnotations": {
                    "description": "Annotations for `delegated-operator-executor` pods. [Reference][annotations].",
                    "type": "object"
                },
                "podDisruptionBudget": {
                    "description": "Pod Disruption Budget for pods for `delegated-operator-executor`. [Reference][pod-disruption-budget].",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a pod disruption budget is enabled for `delegated-operator-executor`.",
                            "type": "boolean"
                        },
                        "minAvailable": {
                            "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                            "type": "integer"
                        }
                    }
                },
                "podSecurityContext": {
                    "description": "Pod-level security attributes and common container settings for `delegated-operator-executor`. [Reference][security-context].",
                    "type": "object"
                },
                "readiness": {
                    "description": "Container security configuration for `delegated-operator-executor`. [Reference][container-security-context].",
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the readiness probe for the `teams-do`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the readiness probe for `teams-do`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the readiness probe for the `teams-do`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "replicaCount": {
                    "description": "Number of pods in the delegated-operator-executor deployment's ReplicaSet. This should not exceed the value set in the deployment's license file for max concurrent delegated operators, which defaults to 3.",
                    "type": "integer"
                },
                "resources": {
                    "description": "Container resource requests and limits for `delegated-operator-executor`. [Reference][resources].",
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object"
                        },
                        "requests": {
                            "type": "object"
                        }
                    }
                },
                "secretEnv": {
                    "description": "Secret variables to be passed to the delegated-operator-executor containers.",
                    "type": "object"
                },
                "securityContext": {
                    "type": "object"
                },
                "startup": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the startup probe for the `teams-do`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the startup probe for `teams-do`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the startup probe for the `teams-do`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "tolerations": {
                    "description": "Allow the k8s scheduler to schedule delegated-operator-executor pods with matching taints. [Reference][taints-and-tolerations].",
                    "type": "array"
                },
                "topologySpreadConstraints": {
                    "description": "Control how Pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `teams-do` deployment. [Reference][topology-spread-constraints].",
                    "type": "array"
                },
                "volumeMounts": {
                    "description": "Volume mounts for delegated-operator-executor pods. [Reference][volumes].",
                    "type": "array"
                },
                "volumes": {
                    "description": "Volumes for `delegated-operator-executor`. [Reference][volumes].",
                    "type": "array"
                }
            }
        },
        "fiftyoneLicenseSecrets": {
            "description": "List of secrets for FiftyOne Enterprise Licenses (one per org)",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "imagePullSecrets": {
            "description": "Container image registry keys. [Reference][image-pull-secrets].",
            "type": "array"
        },
        "ingress": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Ingress annotations. [Reference][annotations].",
                    "type": "object"
                },
                "api": {
                    "description": "The ingress rule values for teams-api, when `apiSettings.dnsName` is not empty. [Reference][ingress-rules].",
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string"
                        },
                        "pathType": {
                            "type": "string"
                        }
                    }
                },
                "className": {
                    "description": "Name of the ingress class.  When empty, a default Ingress class should be defined. When not empty, this value will be the Ingress class name. [Reference][ingress-default-ingress-class]",
                    "type": "string"
                },
                "enabled": {
                    "description": "Controls whether to create the ingress. When `false`, uses a pre-existing ingress. [Reference][ingress].",
                    "type": "boolean"
                },
                "labels": {
                    "description": "Additional labels for the ingress. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "paths": {
                    "description": "Additional ingress rules for the host `teamsAppSettings.dnsName` for the chart managed ingress (when `ingress.enabled: true`). [Reference][ingress-rules].",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string"
                            },
                            "pathType": {
                                "description": "Ingress path type",
                                "type": "string"
                            },
                            "serviceName": {
                                "description": "Ingress path service name",
                                "type": "string"
                            },
                            "servicePort": {
                                "description": "Ingress path service port",
                                "type": "integer"
                            }
                        }
                    }
                },
                "tlsEnabled": {
                    "description": "Controls whether the chart managed ingress contains a `spec.tls` stanza.",
                    "type": "boolean"
                },
                "tlsSecretName": {
                    "description": "Name of secret containing TLS certificate for `teams-app`. Certificate should contain the host names `apiSettings.dnsName` and `teamsAppSettings.dnsName`. When `ingress.tlsEnabled=True`, sets's the value of ingress' `spec.tls[0].secretName`.",
                    "type": "string"
                }
            }
        },
        "namespace": {
            "type": "object",
            "properties": {
                "create": {
                    "description": "Controls whether to create the namespace. When `false`, the namespace must already exists.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The namespace name used for chart resources.",
                    "type": "string"
                }
            }
        },
        "pluginsSettings": {
            "type": "object",
            "properties": {
                "affinity": {
                    "description": "Affinity and anti-affinity for `teams-plugins`. [Reference][affinity].",
                    "type": "object"
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Controls horizontal pod autoscaling for `teams-plugins`. [Reference][autoscaling].",
                            "type": "boolean"
                        },
                        "maxReplicas": {
                            "description": "Maximum replicas for horizontal pod autoscaling for `teams-plugins`.",
                            "type": "integer"
                        },
                        "minReplicas": {
                            "description": "Minimum Replicas for horizontal pod autoscaling for `teams-plugins`.",
                            "type": "integer"
                        },
                        "targetCPUUtilizationPercentage": {
                            "description": "Percent CPU utilization for autoscaling for `teams-plugins`.",
                            "type": "integer"
                        },
                        "targetMemoryUtilizationPercentage": {
                            "description": "Percent memory utilization for autoscaling for `teams-plugins`.",
                            "type": "integer"
                        }
                    }
                },
                "deploymentAnnotations": {
                    "description": "Annotations for the `teams-plugins` deployment. [Reference][annotations].",
                    "type": "object"
                },
                "enabled": {
                    "description": "Controls whether to create a dedicated `teams-plugins` deployment.",
                    "type": "boolean"
                },
                "env": {
                    "type": "object",
                    "properties": {
                        "FIFTYONE_INTERNAL_SERVICE": {
                            "description": "Whether the SDK is running in an internal service context. When running in FiftyOne Enterprise, set to `true`.",
                            "type": "boolean"
                        },
                        "FIFTYONE_MEDIA_CACHE_APP_IMAGES": {
                            "description": "Controls whether cloud media images will be downloaded and added to the local cache upon viewing media in the app.",
                            "type": "boolean"
                        },
                        "FIFTYONE_MEDIA_CACHE_SIZE_BYTES": {
                            "description": "Set the media cache size (in bytes) for the local FiftyOne Plugins processes. When not set, the app's default value is 32 GiB. `-1` disables the media cache garbage collection (and cache size is unlimited).",
                            "type": "integer"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. [Reference][image-pull-policy].",
                            "type": "string"
                        },
                        "repository": {
                            "description": "Container image for `teams-plugins`.",
                            "type": "string"
                        },
                        "tag": {
                            "description": "Image tag for `teams-plugins`. Defaults to the chart version.",
                            "type": "string"
                        }
                    }
                },
                "initContainers": {
                    "type": "object",
                    "properties": {
                        "containerSecurityContext": {
                            "description": "Container security configuration for `teams-plugins` `initContainers`. [Reference][container-security-context].",
                            "type": "object",
                            "properties": {
                                "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "runAsNonRoot": {
                                    "type": "boolean"
                                },
                                "runAsUser": {
                                    "type": "integer"
                                }
                            }
                        },
                        "enabled": {
                            "description": "Whether to enable init containers for `teams-plugins`. [Reference][init-containers].",
                            "type": "boolean"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "description": "Init container images repositories for `teams-plugins`. [Reference][init-containers].",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "Init container images tags for `teams-plugins`. [Reference][init-containers].",
                                    "type": "string"
                                }
                            }
                        },
                        "resources": {
                            "description": "Container resource requests and limits for the `teams-plugins` `initContainers`. [Reference][resources].",
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the `teams-plugins` related objects. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "liveness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the liveness probe for the `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the liveness probe for `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the liveness probe for the `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "nodeSelector": {
                    "description": "nodeSelector for `teams-plugins`. [Reference][node-selector].",
                    "type": "object"
                },
                "podAnnotations": {
                    "description": "Annotations for `teams-plugins` pods. [Reference][annotations].",
                    "type": "object"
                },
                "podDisruptionBudget": {
                    "description": "Pod Disruption Budget for pods for `teams-plugins`. [Reference][pod-disruption-budget].",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a pod disruption budget is enabled for `teams-plugins`.",
                            "type": "boolean"
                        },
                        "minAvailable": {
                            "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                            "type": "integer"
                        }
                    }
                },
                "podSecurityContext": {
                    "description": "Pod-level security attributes and common container settings for `teams-plugins`. [Reference][security-context].",
                    "type": "object"
                },
                "readiness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the readiness probe for the `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the readiness probe for `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the readiness probe for the `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "replicaCount": {
                    "description": "Number of pods in the `teams-plugins` deployment's ReplicaSet. Ignored when `pluginsSettings.autoscaling.enabled: true`. [Reference][deployment].",
                    "type": "integer"
                },
                "resources": {
                    "description": "Container resource requests and limits for `teams-plugins`. [Reference][resources].",
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object"
                        },
                        "requests": {
                            "type": "object"
                        }
                    }
                },
                "secretEnv": {
                    "description": "Secret variables to be passed to the `teams-plugins` containers.",
                    "type": "object"
                },
                "securityContext": {
                    "description": "Container security configuration for `teams-plugins`. [Reference][container-security-context].",
                    "type": "object"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "description": "Service annotations for `teams-plugins`. [Reference][annotations].",
                            "type": "object"
                        },
                        "containerPort": {
                            "description": "Service container port for `teams-plugins`.",
                            "type": "integer"
                        },
                        "name": {
                            "description": "Service name.",
                            "type": "string"
                        },
                        "nodePort": {
                            "description": "Service nodePort set only when `pluginsSettings.service.type: NodePort` for `teams-plugins`.",
                            "type": "null"
                        },
                        "port": {
                            "description": "Service port.",
                            "type": "integer"
                        },
                        "shortname": {
                            "description": "Port name (maximum length is 15 characters) for `teams-plugins`. [Reference][ports].",
                            "type": "string"
                        },
                        "type": {
                            "description": "Service type for `teams-plugins`. [Reference][service-type].",
                            "type": "string"
                        }
                    }
                },
                "startup": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the startup probe for the `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the startup probe for `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the startup probe for the `teams-plugins`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "tolerations": {
                    "description": "Allow the k8s scheduler to schedule `teams-plugins` pods with matching taints. [Reference][taints-and-tolerations].",
                    "type": "array"
                },
                "topologySpreadConstraints": {
                    "description": "Control how Pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `teams-plugins` deployment. [Reference][topology-spread-constraints].",
                    "type": "array"
                },
                "updateStrategy": {
                    "description": "Control how `teams-plugins` pods are redeployed during an upgrade. [Reference][upgrade-strategies]",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "volumeMounts": {
                    "description": "Volume mounts for `teams-plugins` pods. [Reference][volumes].",
                    "type": "array"
                },
                "volumes": {
                    "description": "Volumes for `teams-plugins`. [Reference][volumes].",
                    "type": "array"
                }
            }
        },
        "secret": {
            "type": "object",
            "properties": {
                "create": {
                    "description": "Controls whether to create the secret named `secret.name`.",
                    "type": "boolean"
                },
                "fiftyone": {
                    "type": "object",
                    "properties": {
                        "cookieSecret": {
                            "description": "A randomly generated string for cookie encryption. To generate, run `openssl rand -hex 32`.",
                            "type": "string"
                        },
                        "encryptionKey": {
                            "description": "Encryption key for storage credentials. [Reference][fiftyone-encryption-key].",
                            "type": "string"
                        },
                        "fiftyoneAuthSecret": {
                            "description": "A randomly generated string for CAS Authentication. This can be any string you care to use generated by any mechanism you prefer. This is used for inter-service authentication and for the SuperUser to authenticate at the CAS UI to configure the Central Authentication Service.",
                            "type": "string"
                        },
                        "fiftyoneDatabaseName": {
                            "description": "MongoDB Database Name for FiftyOne Enterprise.",
                            "type": "string"
                        },
                        "mongodbConnectionString": {
                            "description": "MongoDB Connection String. [Reference][mongodb-connection-string].",
                            "type": "string"
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the generated secret. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "name": {
                    "description": "Name of the secret (existing or to be created) in the namespace `namespace.name`.",
                    "type": "string"
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Service Account annotations. [Reference][annotations].",
                    "type": "object"
                },
                "create": {
                    "description": "Controls whether to create the service account named `serviceAccount.name`.",
                    "type": "boolean"
                },
                "labels": {
                    "description": "Additional labels for the generated service account. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "name": {
                    "description": "Name of the service account (existing or to be created) in the namespace `namespace.name` used for deployments. [Reference][service-account].",
                    "type": "string"
                }
            }
        },
        "teamsAppSettings": {
            "type": "object",
            "properties": {
                "affinity": {
                    "description": "Affinity and anti-affinity for `teams-app`.  [Reference][affinity].",
                    "type": "object"
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Controls horizontal pod autoscaling for `teams-app`.  [Reference][autoscaling].",
                            "type": "boolean"
                        },
                        "maxReplicas": {
                            "description": "Maximum Replicas for horizontal autoscaling for `teams-app`.",
                            "type": "integer"
                        },
                        "minReplicas": {
                            "description": "Minimum Replicas for horizontal autoscaling for `teams-app`.",
                            "type": "integer"
                        },
                        "targetCPUUtilizationPercentage": {
                            "description": "Percent CPU utilization for autoscaling for `teams-app`.",
                            "type": "integer"
                        },
                        "targetMemoryUtilizationPercentage": {
                            "description": "Percent memory utilization for autoscaling for `teams-app`.",
                            "type": "integer"
                        }
                    }
                },
                "deploymentAnnotations": {
                    "description": "Annotations for the `teams-app` `Deployment`. [Reference][annotations].",
                    "type": "object"
                },
                "dnsName": {
                    "description": "DNS Name for the `teams-app` service. Used in the chart managed ingress (`spec.tls.hosts` and `spec.rules[0].host`)",
                    "type": "string"
                },
                "env": {
                    "type": "object",
                    "properties": {
                        "APP_USE_HTTPS": {
                            "description": "Controls the protocol of the `teams-app`.  Configure your ingress to match. When `true`, uses the https protocol. When `false`, uses the http protocol.",
                            "type": "boolean"
                        },
                        "FIFTYONE_APP_ALLOW_MEDIA_EXPORT": {
                            "description": "When `false`, disables media export options",
                            "type": "boolean"
                        },
                        "FIFTYONE_APP_ANONYMOUS_ANALYTICS_ENABLED": {
                            "description": "Controls whether anonymous analytics are captured for the application. Set to false to opt-out of anonymous analytics.",
                            "type": "boolean"
                        },
                        "FIFTYONE_APP_DEFAULT_QUERY_PERFORMANCE": {
                            "description": "Controls whether Query Performance mode is enabled by default for every dataset for the teams application. Set to false to set default mode to off.",
                            "type": "boolean"
                        },
                        "FIFTYONE_APP_ENABLE_QUERY_PERFORMANCE": {
                            "description": "Controls whether Query Performance mode is enabled for the application. Set to false to disable Query Performance mode for entire application.",
                            "type": "boolean"
                        },
                        "FIFTYONE_APP_TEAMS_SDK_RECOMMENDED_VERSION": {
                            "description": "The recommended fiftyone SDK version that will be displayed in the install modal (i.e. `pip install ... fiftyone==0.11.0`).",
                            "type": "string"
                        },
                        "FIFTYONE_APP_THEME": {
                            "description": "The default theme configuration. `dark`: Theme will be dark when user visits for the first time. `light`: Theme will be light theme when user visits for the first time. `always-dark`: Sets dark theme on each refresh (overrides user theme changes in the app). `always-light`: Sets light theme on each refresh (overrides user theme changes in the app).",
                            "type": "string"
                        },
                        "RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED": {
                            "description": "Disable duplicate atom/selector key checking that generated false-positive errors. [Reference][recoil-env].",
                            "type": "boolean"
                        }
                    }
                },
                "fiftyoneApiOverride": {
                    "description": "Overrides the `FIFTYONE_API_URI` environment variable. When set `FIFTYONE_API_URI` controls the value shown in the API Key Modal providing guidance for connecting to the FiftyOne Enterprise API. `FIFTYONE_API_URI` uses the value from apiSettings.dnsName if it is set, or uses the teamsAppSettings.dnsName",
                    "type": "string"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "description": "Instruct when the kubelet should pull (download) the specified image. One of `IfNotPresent`, `Always` or `Never`. Reference][image-pull-policy].",
                            "type": "string"
                        },
                        "repository": {
                            "description": "Container image for `teams-app`.",
                            "type": "string"
                        },
                        "tag": {
                            "description": "Image tag for `teams-app`.  Defaults to the chart version.",
                            "type": "string"
                        }
                    }
                },
                "initContainers": {
                    "type": "object",
                    "properties": {
                        "containerSecurityContext": {
                            "description": "Container security configuration for `teams-app` `initContainers`. [Reference][container-security-context].",
                            "type": "object",
                            "properties": {
                                "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "runAsNonRoot": {
                                    "type": "boolean"
                                },
                                "runAsUser": {
                                    "type": "integer"
                                }
                            }
                        },
                        "enabled": {
                            "description": "Whether to enable init containers for `teams-app`.  [Reference][init-containers].",
                            "type": "boolean"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "description": "Init container images repositories for `teams-app`.  [Reference][init-containers].",
                                    "type": "string"
                                },
                                "tag": {
                                    "description": "Init container images tags for `teams-app`.  [Reference][init-containers].",
                                    "type": "string"
                                }
                            }
                        },
                        "resources": {
                            "description": "Container resource requests and limits for the `teams-app` `initContainers`. [Reference][resources].",
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "requests": {
                                    "type": "object",
                                    "properties": {
                                        "cpu": {
                                            "type": "string"
                                        },
                                        "ephemeral-storage": {
                                            "type": "string"
                                        },
                                        "memory": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "labels": {
                    "description": "Additional labels for the `teams-app` related objects. [Reference][labels-and-selectors].",
                    "type": "object"
                },
                "liveness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the liveness probe for the `teams-app`.  [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the liveness probe for `teams-app`.  [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the liveness probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "nodeSelector": {
                    "description": "nodeSelector for `teams-app`.  [Reference][node-selector].",
                    "type": "object"
                },
                "podAnnotations": {
                    "description": "Annotations for `teams-app` pods. [Reference][annotations].",
                    "type": "object"
                },
                "podDisruptionBudget": {
                    "description": "Pod Disruption Budget for pods for `teams-app`. [Reference][pod-disruption-budget].",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a pod disruption budget is enabled for `teams-app`.",
                            "type": "boolean"
                        },
                        "minAvailable": {
                            "description": "Sets the minimum available or maximum unavailable replicas for the deployment object. Either integers or percentages supported. `maxUnavailable` is also supported, however, only one setting can be used at a time. If both are set, `minAvailable` will be preferred.",
                            "type": "integer"
                        }
                    }
                },
                "podSecurityContext": {
                    "description": "Pod-level security attributes and common container settings for `teams-app`.  [Reference][security-context].",
                    "type": "object"
                },
                "readiness": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the readiness probe for the `teams-app`.  [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the readiness probe for `teams-app`.  [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the readiness probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "replicaCount": {
                    "description": "Number of pods in the `teams-app` deployment's ReplicaSet. Ignored when `teamsAppSettings.autoscaling.enabled: true`. [Reference][deployment].",
                    "type": "integer"
                },
                "resources": {
                    "description": "Container resource requests and limits for `teams-app`.  [Reference][resources].",
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object"
                        },
                        "requests": {
                            "type": "object"
                        }
                    }
                },
                "secretEnv": {
                    "description": "Secret variables to be passed to the `teams-app` containers.",
                    "type": "object"
                },
                "securityContext": {
                    "description": "Container security configuration for `teams-app`.  [Reference][container-security-context].",
                    "type": "object"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "description": "Service annotations for `teams-app`.  [Reference][annotations].",
                            "type": "object"
                        },
                        "containerPort": {
                            "description": "Service container port for `teams-app`.",
                            "type": "integer"
                        },
                        "name": {
                            "description": "Service name.",
                            "type": "string"
                        },
                        "nodePort": {
                            "description": "Service nodePort set only when `teamsAppSettings.service.type: NodePort` for `teams-app`.",
                            "type": "null"
                        },
                        "port": {
                            "description": "Service port.",
                            "type": "integer"
                        },
                        "shortname": {
                            "description": "Port name (maximum length is 15 characters) for `teams-app`.  [Reference][ports].",
                            "type": "string"
                        },
                        "type": {
                            "description": "Service type for `teams-app`.  [Reference][service-type].",
                            "type": "string"
                        }
                    }
                },
                "startup": {
                    "type": "object",
                    "properties": {
                        "failureThreshold": {
                            "description": "Number of times to retry the startup probe for the `teams-app`.  [Reference][probes].",
                            "type": "integer"
                        },
                        "periodSeconds": {
                            "description": "How often (in seconds) to perform the startup probe for `teams-app`.  [Reference][probes].",
                            "type": "integer"
                        },
                        "timeoutSeconds": {
                            "description": "Timeout for the startup probe for the `fiftyone-app`. [Reference][probes].",
                            "type": "integer"
                        }
                    }
                },
                "tolerations": {
                    "description": "Allow the k8s scheduler to schedule `teams-app` pods with matching taints. [Reference][taints-and-tolerations].",
                    "type": "array"
                },
                "topologySpreadConstraints": {
                    "description": "Control how Pods are spread across your distributed footprint. Label selectors will be defaulted to those of the `teams-app` deployment. [Reference][topology-spread-constraints].",
                    "type": "array"
                },
                "updateStrategy": {
                    "description": "Control how `teams-app` pods are redeployed during an upgrade. [Reference][upgrade-strategies]",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "volumeMounts": {
                    "description": "Volume mounts for `teams-app` pods. [Reference][volumes].",
                    "type": "array"
                },
                "volumes": {
                    "description": "Volumes for `teams-app` pods. [Reference][volumes].",
                    "type": "array"
                }
            }
        }
    }
}
