---
# Voxel51 provided you with a voxel51-docker.json file, you can use the following command to create a Pull Secret:
#
# ```shell
#  kubectl --namespace your-namespace-here create secret generic regcred \
#    --from-file=.dockerconfigjson=./voxel51-docker.json --type kubernetes.io/dockerconfigjson
# ```
#
# If you use the Voxel51 command above your imagePullSecrets would look like:
imagePullSecrets:
  - name: regcred

secret:
  fiftyone:
    # These secrets come from your MongoDB implementation
    fiftyoneDatabaseName: fiftyone
    mongodbConnectionString: mongodb://admin:REPLACEME@fiftyone-mongodb.fiftyone-mongodb.svc.cluster.local/?authSource=admin

    # This secret is a required random string used to encrypt session cookies.
    # To generate this string, run
    #
    # ```shell
    # openssl rand -hex 32
    # ````
    #
    cookieSecret:

    # This required key is used to encrypt storage credentials in the database.
    #   Do NOT lose this key!
    # To generate this key, run (in python)
    #
    # ```python
    # from cryptography.fernet import Fernet
    # print(Fernet.generate_key().decode())
    # ```
    #
    encryptionKey:

    # This secret is a random string used to authenticate to the CAS service.
    # This can be any string you care to use generated by any mechanism you
    #   prefer.
    # You could use something like:
    #  `cat /dev/urandom | LC_CTYPE=C tr -cd '[:graph:]' | head -c 32`
    #  to generate this string.
    # This is used for inter-service authentication and for the SuperUser to
    # authenticate at the CAS UI to configure the Central Authentication Service.
    fiftyoneAuthSecret:

# apiSettings:

# appSettings:
#   env:
#     # FIFTYONE_DATABASE_ADMIN is set to `false` by default for v2.1.1 installs
#     # If you are performing a new install or an upgrade from v1.0 or earlier
#     # you may want to set this value to `true`.
#     # Please see https://helm.fiftyone.ai/#initial-installation-vs-upgrades for details
#     FIFTYONE_DATABASE_ADMIN: false

teamsAppSettings:
  dnsName: replace.this.dns.name

ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
    kubernetes.io/ingress.global-static-ip-name: "fiftyone-teams-static-ip"
    networking.gke.io/v1beta1.FrontendConfig: ssl-redirect
